[{"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/index.js":"1","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/reportWebVitals.js":"2","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/App.js":"3","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Showcase.js":"4","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js":"5","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Home.js":"6","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/ShowcaseResult.js":"7","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Image.js":"8","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/TweetCard.js":"9","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/ProfileImage.js":"10"},{"size":354,"mtime":1643579130492,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1643134551445,"results":"13","hashOfConfig":"12"},{"size":1042,"mtime":1643418810200,"results":"14","hashOfConfig":"12"},{"size":3882,"mtime":1651262157287,"results":"15","hashOfConfig":"12"},{"size":30910,"mtime":1645389778022,"results":"16","hashOfConfig":"12"},{"size":897,"mtime":1643484085195,"results":"17","hashOfConfig":"12"},{"size":1355,"mtime":1651262343956,"results":"18","hashOfConfig":"12"},{"size":301,"mtime":1643474791663,"results":"19","hashOfConfig":"12"},{"size":1352,"mtime":1645389198000,"results":"20","hashOfConfig":"12"},{"size":273,"mtime":1645390311289,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14h16ad",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/index.js",[],["47","48"],"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/reportWebVitals.js",[],"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/App.js",[],"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Showcase.js",["49","50"],"import React, {useState, useEffect} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\nimport ShowcaseResult from './ShowcaseResult'\nimport axios from 'axios'\n\nexport default function Showcase() {\n\nconst [show, setShow] = useState({})\nconst [buttonpushed, setButtonpushed] = useState('')\nconst [id, setId] = useState('')\n\nfunction handleClickGaga(event) {\n    event.preventDefault(); \n    setButtonpushed('Lady Gaga') \n    setId(14230524)\n}\n\nfunction handleClickOprah(event) {\n    event.preventDefault();\n    setButtonpushed('Oprah Winfrey')\n    setId(19397785) \n}\n\nfunction handleClickReese(event) {\n    event.preventDefault();\n    setButtonpushed('Reese Witherspoon') \n    setId(1198406491)\n}\n\nfunction handleClickAshton(event) {\n    event.preventDefault();\n    setButtonpushed('Ashton Kutcher') \n    setId(19058681)\n}\n\nfunction handleClickBeyonce(event) {\n    event.preventDefault();\n    setButtonpushed('Beyonce Knowles') \n    setId(31239408)\n}\n\nasync function searchUser() {  \n    try {\n        const search = await axios.get(`/api/searchByUser?search=${id}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }\n}\n  \n\nfunction getRandomNum() {\n    let num = Math.round(Math.random() *10)\n    return num;\n}    \n\n    useEffect(()=> {\n        if (buttonpushed) {\n            setShow('')\n            searchUser()\n                .then(res=> {\n                    \n                    const randomTweet = res.data[getRandomNum()]\n                    \n                    setShow({\n                        type: randomTweet.type ? randomTweet.type : \"none\",\n                        url: randomTweet.url ? randomTweet.url : \"none\",\n                        retweet_count: randomTweet.retweet_count,\n                        like_count: randomTweet.like_count,\n                        dateString: randomTweet.dateString,\n                        id: randomTweet.id,\n                        name: randomTweet.name,\n                        username: randomTweet.username,\n                        verified: randomTweet.verified,\n                        profile_image_url: randomTweet.profile_image_url,\n                        tweetString: randomTweet.tweetString,\n                        url_string: randomTweet.url_string\n                    })\n                })\n            } else {                \n            setButtonpushed('')\n            } \n        }, [buttonpushed])  \n        \n    return (\n        <div \n            className=\"showcaseContainer\"\n        >\n        <div\n            className=\"showcaseBtnsContainer\"\n        >\n        </div>\n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickGaga}\n  \n            >Gaga</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickOprah}    \n            >Oprah</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickReese}     \n            >Reese</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickAshton}    \n            >Ashton</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickBeyonce}\n            >Beyonce</button> \n            \n            \n            <div>\n                <div className=\"showcaseResultContainer\">\n                <div className=\"showcaseResult\">\n                    {buttonpushed}\n                    <ShowcaseResult\n                        result={{tweet: show, celebrity: buttonpushed, toggleDisplay: 'true'}}\n                    />  \n                </div>\n                </div>\n            </div>\n                <p\n                className='searchResult_blog'\n                >Why did I build this?  Read the blog post <a href=\"https://casspicerblog.netlify.app/blog/15-minutes\">here.</a></p>\n        </div>\n    )\n}\n","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js",["51"],"import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport axios from 'axios';\nimport TweetCard from './TweetCard';\n\nexport default function Search() {\n  const [searchresult, setSearchresult] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [errorValueUser, setErrorValueUser] = useState(false);\n  const [errorValueContent, setErrorValueContent] = useState(false);\n  const [errorValueCharacters, setErrorValueCharacters] = useState('');\n  const [errorValueAuthorized, setErrorValueAuthorized] = useState('');\n\n  function searchByUserWrapper() {\n    searchByUsername().then((res) => {\n      if (\n        Object.keys(res.data).length === 0 ||\n        Object.keys(res.data).includes('stack')\n      ) {\n        setErrorValueUser(true);\n      } else {\n        setErrorValueUser(false);\n        let usernameArray = res.data.data;\n        usernameArray.forEach((element) => {\n          searchUser(element.id).then((res) => {\n            if (Object.keys(res.data).includes('errors')) {\n              setErrorValueAuthorized(\n                \"I'm sorry, that user has hidden their tweets from view.  Please try again.\"\n              );\n            } else {\n              setErrorValueAuthorized('');\n              const newArray = [];\n              for (let i = 0; i <= 9; i++) {\n                let searchResult = {\n                  id: res.data[i].id,\n                  dateString: res.data[i].dateString,\n                  name: res.data[i].name,\n                  username: res.data[i].username,\n                  verified: res.data[i].verified,\n                  profile_image_url: res.data[i].profile_image_url,\n                  tweetString: res.data[i].tweetString,\n                  url: res.data[i].url,\n                  type: res.data[i].type,\n                  like_count: res.data[i].like_count,\n                  retweet_count: res.data[i].retweet_count,\n                  url_string: res.data[i].url_string,\n                };\n                newArray.push(searchResult);\n              }\n              setSearchresult(newArray);\n            }\n          });\n        });\n      }\n    });\n  }\n\n  function searchByContentWrapper() {\n    searchTweets().then((res) => {\n      if (\n        Object.keys(res.data).length === 0 ||\n        Object.keys(res.data).includes('stack')\n      ) {\n        setErrorValueContent(true);\n      } else {\n        setErrorValueAuthorized('');\n        const newArray = [];\n        for (let i = 0; i <= 9; i++) {\n          let searchResult = {\n            id: res.data[i].id,\n            dateString: res.data[i].dateString,\n            name: res.data[i].name,\n            username: res.data[i].username,\n            verified: res.data[i].verified,\n            profile_image_url: res.data[i].profile_image_url,\n            tweetString: res.data[i].tweetString,\n            url: res.data[i].url,\n            type: res.data[i].type,\n            like_count: res.data[i].like_count,\n            retweet_count: res.data[i].retweet_count,\n            url_string: res.data[i].url_string,\n          };\n          newArray.push(searchResult);\n        }\n        setSearchresult(newArray);\n      }\n    });\n  }\n\n  async function searchTweets() {\n    try {\n      var search = await axios.get(`/api/searchdata?search=${inputValue}`);\n      return search;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function searchByUsername() {\n    try {\n      var search = await axios.get(\n        `/api/searchByUsername?search=${inputValue}`\n      );\n      return search;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function searchUser(id) {\n    try {\n      var search = await axios.get(`/api/searchByUser?search=${id}`);\n      return search;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleClickUser() {\n    setErrorValueCharacters('');\n    setSearchresult([]);\n    setErrorValueContent(false);\n    searchByUserWrapper();\n  }\n\n  function handleClickContent() {\n    if (!/^[a-zA-Z0-9]+$/.test(inputValue)) {\n      setErrorValueCharacters(\n        'Please enter only text - no special characters!'\n      );\n    } else {\n      setErrorValueCharacters('');\n      setSearchresult([]);\n      setErrorValueUser(false);\n      searchByContentWrapper();\n    }\n  }\n\n  const tweetCards = searchresult.map((tweet) => {\n    return (\n      <TweetCard\n        key={tweet.id}\n        dateString={tweet.dateString}\n        created_at={tweet.created_at}\n        name={tweet.name}\n        username={tweet.username}\n        verified={tweet.verified}\n        profile_image_url={tweet.profile_image_url}\n        tweetString={tweet.tweetString}\n        type={tweet.type}\n        url={tweet.url}\n        like_count={tweet.like_count}\n        retweet_count={tweet.retweet_count}\n        url_string={tweet.url_string}\n      />\n    );\n  });\n\n  return (\n    <div className='searchContainer'>\n      <div className='searchBtnsContainer'>\n        <button className='searchBtnUser' onClick={handleClickUser}>\n          Search by User\n        </button>\n        <button className='searchBtnContent' onClick={handleClickContent}>\n          Search by Content\n        </button>\n        <input\n          type='text'\n          placeholder='Type search item here...'\n          value={inputValue}\n          onChange={(event) => setInputValue(event.target.value)}></input>\n      </div>\n      <div className='searchResultContainer'>\n        <div className='searchResult'>\n          <p>\n            {errorValueUser\n              ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?`\n              : ``}\n          </p>\n          <p>\n            {errorValueContent\n              ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.`\n              : ``}\n          </p>\n          <p>{errorValueCharacters}</p>\n          <p>{errorValueAuthorized}</p>\n\n          {tweetCards}\n        </div>\n        <p className='searchResult_blog'>\n          Why did I build this? Read the blog post{' '}\n          <a href='https://casspicerblog.netlify.app/blog/15-minutes'>here.</a>\n        </p>\n      </div>\n    </div>\n  );\n}\n\n//my original (before code review to refactor)\n\n// import React, {useState, useEffect} from 'react'\n// import './index.css'\n// import TV from './pics/TV.png'\n// import axios from 'axios'\n// import TweetCard from './TweetCard'\n\n// export default function Search() {\n\n// const [searchresult, setSearchresult] = useState([])\n// const [getByUserButton, setGetByUserButton] = useState(false)\n// const [getByContentButton, setGetByContentButton] = useState(false)\n// const [inputValue, setInputValue] = useState('')\n// const [errorValueUser, setErrorValueUser] = useState(false)\n// const [errorValueContent, setErrorValueContent] = useState(false)\n// const [errorValueCharacters, setErrorValueCharacters] = useState('')\n// const [errorValueAuthorized, setErrorValueAuthorized] = useState('')\n\n\n// async function searchTweets() {  \n//     try {\n//         const search = await axios.get(`/api/searchdata?search=${inputValue}`)\n//         return search\n//     }\n//     catch(err){\n//         console.log(err)\n//     }\n// }\n\n// async function searchByUsername() {\n//     try {\n//         const search = await axios.get(`/api/searchByUsername?search=${inputValue}`)\n//         return search\n//     }\n//     catch(err){\n//         console.log(err)\n//     }    \n// }\n\n// async function searchUser(id) {  \n//     try {\n//         const search = await axios.get(`/api/searchByUser?search=${id}`)\n//         return search\n//     }\n//     catch(err){\n//         console.log(err)\n//     }\n// }\n\n// function handleClickUser() {\n//     setErrorValueCharacters('')\n//     setSearchresult([])\n//     setGetByContentButton(false)\n//     setGetByUserButton(true)\n//     setErrorValueContent(false)\n//     }\n\n// function handleClickContent() { \n\n//     if(! /^[a-zA-Z0-9]+$/.test(inputValue)) {\n//         setErrorValueCharacters('Please enter only text - no special characters!')\n//     } else {\n//         setErrorValueCharacters('')\n//         setSearchresult([])\n//         setGetByUserButton(false)\n//         setGetByContentButton(true)\n//         setErrorValueUser(false)\n//     }\n// }\n\n\n// useEffect(()=>{\n//     if(getByUserButton) {\n//         searchByUsername()\n//         .then(res=>{ \n//          if (Object.keys(res.data).length === 0 || Object.keys(res.data).includes('stack')) {   \n//             setErrorValueUser(true)\n//             setGetByUserButton(false)\n//         } else {\n//                 setErrorValueUser(false)\n//                 let usernameArray = res.data.data;\n//                     usernameArray.forEach(element=> {\n//                         searchUser(element.id)                  \n//                             .then(res=>{\n//                                 if(Object.keys(res.data).includes('errors')) {\n//                                     setErrorValueAuthorized(\"I'm sorry, that user has hidden their tweets from view.  Please try again.\")\n//                                 } else {\n//                                     setErrorValueAuthorized('')\n//                                     setSearchresult([{\n//                                         id: res.data[0].id,\n//                                         dateString: res.data[0].dateString,\n//                                         name: res.data[0].name,\n//                                         username: res.data[0].username,\n//                                         verified: res.data[0].verified,\n//                                         profile_image_url: res.data[0].profile_image_url,\n//                                         tweetString: res.data[0].tweetString,\n//                                         url: res.data[0].url,\n//                                         type: res.data[0].type,\n//                                         like_count: res.data[0].like_count,\n//                                         retweet_count: res.data[0].retweet_count,\n//                                         url_string: res.data[0].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[1].id,\n//                                         dateString: res.data[1].dateString,\n//                                         name: res.data[1].name,\n//                                         username: res.data[1].username,\n//                                         verified: res.data[1].verified,\n//                                         profile_image_url: res.data[1].profile_image_url,\n//                                         tweetString: res.data[1].tweetString,\n//                                         url: res.data[1].url,\n//                                         type: res.data[1].type,\n//                                         like_count: res.data[1].like_count,\n//                                         retweet_count: res.data[1].retweet_count,\n//                                         url_string: res.data[1].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[2].id,\n//                                         dateString: res.data[2].dateString,\n//                                         name: res.data[2].name,\n//                                         username: res.data[2].username,\n//                                         verified: res.data[2].verified,\n//                                         profile_image_url: res.data[2].profile_image_url,\n//                                         tweetString: res.data[2].tweetString,\n//                                         url: res.data[2].url,\n//                                         type: res.data[2].type,\n//                                         like_count: res.data[2].like_count,\n//                                         retweet_count: res.data[2].retweet_count,\n//                                         url_string: res.data[2].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[3].id,\n//                                         dateString: res.data[3].dateString,\n//                                         name: res.data[3].name,\n//                                         username: res.data[3].username,\n//                                         verified: res.data[3].verified,\n//                                         profile_image_url: res.data[3].profile_image_url,\n//                                         tweetString: res.data[3].tweetString,\n//                                         url: res.data[3].url,\n//                                         type: res.data[3].type,\n//                                         like_count: res.data[3].like_count,\n//                                         retweet_count: res.data[3].retweet_count,\n//                                         url_string: res.data[3].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[4].id,\n//                                         dateString: res.data[4].dateString,\n//                                         name: res.data[4].name,\n//                                         username: res.data[4].username,\n//                                         verified: res.data[4].verified,\n//                                         profile_image_url: res.data[4].profile_image_url,\n//                                         tweetString: res.data[4].tweetString,\n//                                         url: res.data[4].url,\n//                                         type: res.data[4].type,\n//                                         like_count: res.data[4].like_count,\n//                                         retweet_count: res.data[4].retweet_count,\n//                                         url_string: res.data[4].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[5].id,\n//                                         dateString: res.data[5].dateString,\n//                                         name: res.data[5].name,\n//                                         username: res.data[5].username,\n//                                         verified: res.data[5].verified,\n//                                         profile_image_url: res.data[5].profile_image_url,\n//                                         tweetString: res.data[5].tweetString,\n//                                         url: res.data[5].url,\n//                                         type: res.data[5].type,\n//                                         like_count: res.data[5].like_count,\n//                                         retweet_count: res.data[5].retweet_count,\n//                                         url_string: res.data[5].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[6].id,\n//                                         dateString: res.data[6].dateString,\n//                                         name: res.data[6].name,\n//                                         username: res.data[6].username,\n//                                         verified: res.data[6].verified,\n//                                         profile_image_url: res.data[6].profile_image_url,\n//                                         tweetString: res.data[6].tweetString,\n//                                         url: res.data[6].url,\n//                                         type: res.data[6].type,\n//                                         like_count: res.data[6].like_count,\n//                                         retweet_count: res.data[6].retweet_count,\n//                                         url_string: res.data[6].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[7].id,\n//                                         dateString: res.data[7].dateString,\n//                                         name: res.data[7].name,\n//                                         username: res.data[7].username,\n//                                         verified: res.data[7].verified,\n//                                         profile_image_url: res.data[7].profile_image_url,\n//                                         tweetString: res.data[7].tweetString,\n//                                         url: res.data[7].url,\n//                                         type: res.data[7].type,\n//                                         like_count: res.data[7].like_count,\n//                                         retweet_count: res.data[7].retweet_count,\n//                                         url_string: res.data[7].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[8].id,\n//                                         dateString: res.data[8].dateString,\n//                                         name: res.data[8].name,\n//                                         username: res.data[8].username,\n//                                         verified: res.data[8].verified,\n//                                         profile_image_url: res.data[8].profile_image_url,\n//                                         tweetString: res.data[8].tweetString,\n//                                         url: res.data[8].url,\n//                                         type: res.data[8].type,\n//                                         like_count: res.data[8].like_count,\n//                                         retweet_count: res.data[8].retweet_count,\n//                                         url_string: res.data[8].url_string\n//                                     },\n//                                     {\n//                                         id: res.data[9].id,\n//                                         dateString: res.data[9].dateString,\n//                                         name: res.data[9].name,\n//                                         username: res.data[9].username,\n//                                         verified: res.data[9].verified,\n//                                         profile_image_url: res.data[9].profile_image_url,\n//                                         tweetString: res.data[9].tweetString,\n//                                         url: res.data[9].url,\n//                                         type: res.data[9].type,\n//                                         like_count: res.data[9].like_count,\n//                                         retweet_count: res.data[9].retweet_count,\n//                                         url_string: res.data[9].url_string\n//                                     }\n//                                 ])\n//                             }\n//                             setGetByUserButton(false)\n                            \n//                             })\n                            \n//                         })\n                    \n//                     } \n//             })      \n//     } else if (getByContentButton) {\n//         searchTweets() \n//                 .then(res=>{\n//                     if (Object.keys(res.data).length === 0 || Object.keys(res.data).includes('stack')) {\n//                         setErrorValueContent(true)\n//                         setGetByContentButton(false)\n//                     } else {\n//                         setErrorValueAuthorized('')\n//                         setSearchresult(\n//                             [{\n//                                 id: res.data[0].id,\n//                                 dateString: res.data[0].dateString,\n//                                 name: res.data[0].name,\n//                                 username: res.data[0].username,\n//                                 verified: res.data[0].verified,\n//                                 profile_image_url: res.data[0].profile_image_url,\n//                                 tweetString: res.data[0].tweetString,\n//                                 url: res.data[0].url,\n//                                 type: res.data[0].type,\n//                                 like_count: res.data[0].like_count,\n//                                 retweet_count: res.data[0].retweet_count,\n//                                 url_string: res.data[0].url_string\n//                             },\n//                             {\n//                                 id: res.data[1].id,\n//                                 dateString: res.data[1].dateString,\n//                                 name: res.data[1].name,\n//                                 username: res.data[1].username,\n//                                 verified: res.data[1].verified,\n//                                 profile_image_url: res.data[1].profile_image_url,\n//                                 tweetString: res.data[1].tweetString,\n//                                 url: res.data[1].url,\n//                                 type: res.data[1].type,\n//                                 like_count: res.data[1].like_count,\n//                                 retweet_count: res.data[1].retweet_count,\n//                                 url_string: res.data[1].url_string\n//                             },\n//                             {\n//                                 id: res.data[2].id,\n//                                 dateString: res.data[2].dateString,\n//                                 name: res.data[2].name,\n//                                 username: res.data[2].username,\n//                                 verified: res.data[2].verified,\n//                                 profile_image_url: res.data[2].profile_image_url,\n//                                 tweetString: res.data[2].tweetString,\n//                                 url: res.data[2].url,\n//                                 type: res.data[2].type,\n//                                 like_count: res.data[2].like_count,\n//                                 retweet_count: res.data[2].retweet_count,\n//                                 url_string: res.data[2].url_string\n//                             },\n//                             {\n//                                 id: res.data[3].id,\n//                                 dateString: res.data[3].dateString,\n//                                 name: res.data[3].name,\n//                                 username: res.data[3].username,\n//                                 verified: res.data[3].verified,\n//                                 profile_image_url: res.data[3].profile_image_url,\n//                                 tweetString: res.data[3].tweetString,\n//                                 url: res.data[3].url,\n//                                 type: res.data[3].type,\n//                                 like_count: res.data[3].like_count,\n//                                 retweet_count: res.data[3].retweet_count,\n//                                 url_string: res.data[3].url_string\n//                             },\n//                             {\n//                                 id: res.data[4].id,\n//                                 dateString: res.data[4].dateString,\n//                                 name: res.data[4].name,\n//                                 username: res.data[4].username,\n//                                 verified: res.data[4].verified,\n//                                 profile_image_url: res.data[4].profile_image_url,\n//                                 tweetString: res.data[4].tweetString,\n//                                 url: res.data[4].url,\n//                                 type: res.data[4].type,\n//                                 like_count: res.data[4].like_count,\n//                                 retweet_count: res.data[4].retweet_count,\n//                                 url_string: res.data[4].url_string\n//                             },\n//                             {\n//                                 id: res.data[5].id,\n//                                 dateString: res.data[5].dateString,\n//                                 name: res.data[5].name,\n//                                 username: res.data[5].username,\n//                                 verified: res.data[5].verified,\n//                                 profile_image_url: res.data[5].profile_image_url,\n//                                 tweetString: res.data[5].tweetString,\n//                                 url: res.data[5].url,\n//                                 type: res.data[5].type,\n//                                 like_count: res.data[5].like_count,\n//                                 retweet_count: res.data[5].retweet_count,\n//                                 url_string: res.data[5].url_string\n//                             },\n//                             {\n//                                 id: res.data[6].id,\n//                                 dateString: res.data[6].dateString,\n//                                 name: res.data[6].name,\n//                                 username: res.data[6].username,\n//                                 verified: res.data[6].verified,\n//                                 profile_image_url: res.data[6].profile_image_url,\n//                                 tweetString: res.data[6].tweetString,\n//                                 url: res.data[6].url,\n//                                 type: res.data[6].type,\n//                                 like_count: res.data[6].like_count,\n//                                 retweet_count: res.data[6].retweet_count,\n//                                 url_string: res.data[6].url_string\n//                             },\n//                             {\n//                                 id: res.data[7].id,\n//                                 dateString: res.data[7].dateString,\n//                                 name: res.data[7].name,\n//                                 username: res.data[7].username,\n//                                 verified: res.data[7].verified,\n//                                 profile_image_url: res.data[7].profile_image_url,\n//                                 tweetString: res.data[7].tweetString,\n//                                 url: res.data[7].url,\n//                                 type: res.data[7].type,\n//                                 like_count: res.data[7].like_count,\n//                                 retweet_count: res.data[7].retweet_count,\n//                                 url_string: res.data[7].url_string\n//                             },\n//                             {\n//                                 id: res.data[8].id,\n//                                 dateString: res.data[8].dateString,\n//                                 name: res.data[8].name,\n//                                 username: res.data[8].username,\n//                                 verified: res.data[8].verified,\n//                                 profile_image_url: res.data[8].profile_image_url,\n//                                 tweetString: res.data[8].tweetString,\n//                                 url: res.data[8].url,\n//                                 type: res.data[8].type,\n//                                 like_count: res.data[8].like_count,\n//                                 retweet_count: res.data[8].retweet_count,\n//                                 url_string: res.data[8].url_string\n//                             },\n//                             {\n//                                 id: res.data[9].id,\n//                                 dateString: res.data[9].dateString,\n//                                 name: res.data[9].name,\n//                                 username: res.data[9].username,\n//                                 verified: res.data[9].verified,\n//                                 profile_image_url: res.data[9].profile_image_url,\n//                                 tweetString: res.data[9].tweetString,\n//                                 url: res.data[9].url,\n//                                 type: res.data[9].type,\n//                                 like_count: res.data[9].like_count,\n//                                 retweet_count: res.data[9].retweet_count,\n//                                 url_string: res.data[9].url_string\n//                             }\n//                         ])\n//                         setGetByContentButton(false)\n//                     } \n//                 })  \n//     } \n// }, [getByUserButton, getByContentButton])\n\n// const tweetCards = searchresult.map((tweet) => { \n//     return <TweetCard key={tweet.id} dateString={tweet.dateString} created_at={tweet.created_at} name={tweet.name} username={tweet.username} \n//     verified={tweet.verified} profile_image_url={tweet.profile_image_url} tweetString={tweet.tweetString} type={tweet.type} url={tweet.url}\n//      like_count={tweet.like_count} retweet_count={tweet.retweet_count} url_string={tweet.url_string}\n//     />})\n   \n//     return (\n//         <div \n//             className=\"searchContainer\"\n//         >\n//             <div className=\"searchBtnsContainer\">\n//                 <button \n//                     className=\"searchBtnUser\"\n//                     onClick={handleClickUser}\n//                 >Search by User</button>\n//                 <button \n//                     className=\"searchBtnContent\"\n//                     onClick={handleClickContent}\n//                 >Search by Content</button>\n//                 <input \n//                     type=\"text\"     \n//                     placeholder=\"Type search item here...\"\n//                     value={inputValue}\n//                     onChange={event=>setInputValue(event.target.value)}> \n//                 </input>\n//             </div>\n//             <div className=\"searchResultContainer\">\n//                 <div className=\"searchResult\">  \n\n//                 <p>{errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``}</p>\n//                     <p>{errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``}</p>\n//                     <p>{errorValueCharacters}</p>\n//                     <p>{errorValueAuthorized}</p>\n\n//                 {tweetCards}\n \n//                 </div> \n//                     <p\n//                         className=\"searchResult_blog\"\n//                     >Why did I build this?  Read the blog post <a href=\"https://casspicerblog.netlify.app/blog/15-minutes\">here.</a></p> \n//             </div>\n//         </div>\n//     )\n// }","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Home.js",[],"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/ShowcaseResult.js",[],"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Image.js",["52"],"import React from 'react'\n\nexport default function Image(props) {\n    return (\n        <div>\n            <img \n                src={props.result.url}\n                alt='tweet image'  \n                className='tweetCardImg'\n                >\n            </img> \n            \n        </div>\n    )\n}\n","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/TweetCard.js",[],"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/ProfileImage.js",["53"],"import React from 'react';\n\nexport default function ProfileImage(props) {\n  return  <div>\n        <img\n            src={props.url ? props.url : ''}\n            alt='profile image' \n            width='100%' \n            className=\"profileImg\"\n        ></img> \n    </div>;\n}\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":10},{"ruleId":"62","severity":1,"message":"63","line":85,"column":12,"nodeType":"64","endLine":85,"endColumn":26,"suggestions":"65"},{"ruleId":"58","severity":1,"message":"66","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"67","severity":1,"message":"68","line":6,"column":13,"nodeType":"69","endLine":10,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":5,"column":9,"nodeType":"69","endLine":10,"endColumn":10},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'TV' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchUser'. Either include it or remove the dependency array.","ArrayExpression",["72"],"'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},"Update the dependencies array to be: [buttonpushed, searchUser]",{"range":"75","text":"76"},[2389,2403],"[buttonpushed, searchUser]"]