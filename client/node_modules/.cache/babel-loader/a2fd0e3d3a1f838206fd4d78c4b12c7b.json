{"ast":null,"code":"var _jsxFileName = \"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport TV from './pics/TV.png';\nimport DOMpurify from 'dompurify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction cleanData(userInput) {\n  return DOMpurify.sanitize(userInput);\n}\n\nexport default function Search() {\n  const [searchresult, setSearchresult] = useState('');\n  const [getTweetsButton, setGetTweetsButton] = useState(false);\n  const [inputValue, setInputValue] = useState('');\n  const [errorValueUser, setErrorValueUser] = useState(false);\n  const [errorValueContent, setErrorValueContent] = useState(false);\n  const [hover1, setHover1] = useState('');\n  const [hover2, setHover2] = useState(''); //need to make inputValue more secure - user can only input string etc\n\n  async function searchTweets() {\n    try {\n      var search = await axios.get(`/api/searchdata?search=${inputValue}`);\n      return search;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function searchByUsername() {\n    try {\n      var search = await axios.get(`/api/searchByUsername?search=${inputValue}`);\n      return search;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function searchUser(id) {\n    try {\n      var search = await axios.get(`/api/searchByUser?search=${id}`);\n      return search;\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleHoverOver1() {\n    setHover1(`3px solid aqua`);\n  }\n\n  function handleHoverOut1() {\n    setHover1(``);\n  }\n\n  function handleHoverOver2() {\n    setHover2(`3px solid aqua`);\n  }\n\n  function handleHoverOut2() {\n    setHover2(``);\n  }\n\n  function handleClickUser() {\n    setSearchresult('');\n    setErrorValueContent(false);\n    searchByUsername().then(res => {\n      if (Object.keys(res.data).length === 0) {\n        setErrorValueUser(true);\n      } else {\n        setErrorValueUser(false);\n        let usernameArray = res.data.data;\n        console.log(usernameArray[0]);\n        usernameArray.forEach(element => {\n          console.log('username :', element.username);\n          searchUser(element.id).then(res => {\n            console.log(res.data);\n            setSearchresult(res.data[0].public_metrics.retweet_count);\n          });\n        });\n      } //}\n      //var tweetsArray = res.data.statuses;\n      //console.log(tweetsArray[0].user.name)\n      // var newTweetsArray = tweetsArray.map(tweet => {\n      //     return <div key={tweet.id}>{tweet.text} </div>})\n      //     setSearchresult(newTweetsArray)\n\n    });\n  }\n\n  function handleClickContent() {\n    setSearchresult('');\n    setErrorValueUser(false);\n    searchTweets().then(res => {\n      console.log(res.data);\n\n      if (Object.keys(res.data).length === 0) {\n        setErrorValueUser(true);\n      } else {\n        console.log(res.data);\n        setSearchresult([{\n          id: res.data[0].id,\n          created_at: res.data[0].created_at,\n          text: res.data[0].text,\n          url: res.data[0].url,\n          type: res.data[0].type,\n          like_count: res.data[0].public_metrics.like_count,\n          retweet_count: res.data[0].public_metrics.retweet_count\n        }, {}, {}, {}, {}, {}, {}, {}, {}, {}]); // var tweetsArray = res.data.statuses;\n        // var newTweetsArray = tweetsArray.map(tweet => {\n        //     return <div key={tweet.id}\n        //         style={{border: `1px solid black`,\n        //                 borderRadius: `13px`,\n        //                 fontWeight: `400`,\n        //                 fontStyle: `normal`,\n        //                 padding: `.5em`,\n        //                 margin: `.4em auto .4em auto`\n        //                 }}\n        //             >\n        //         <p\n        //             style={{textDecoration: `underline`}}\n        //         >{tweet.user.screen_name}</p>\n        //         <p>{tweet.text}</p>\n        //         {tweet.entities.media ? tweet.entities.media.map(element => {\n        //             return <img key={element.id} src={element.media_url_https} alt='gif' width='100%' style={{borderRadius: `13px`}}></img>\n        //             }) : ''}\n        //         {tweet.extended_entities ? tweet.extended_entities.media.map(element=> {\n        //             console.log(element.video_info.variants[0].content_type)\n        //             return  <video key={element.id} controls width='680'>\n        //                     <source src={element.video_info.variants[0].url} type={element.video_info.variants[0].content_type}></source>\n        //                     </video> \n        //         }) : ''}                        \n        //         <p>üíö: {tweet.favorite_count}</p>\n        //         <p>üîÅ: {tweet.retweet_count}</p>\n        //         </div>\n        //         })\n        //     setSearchresult(newTweetsArray)\n        //} else {\n        //console.log('nothing')\n        //setErrorValueContent(true)\n        //}\n      }\n    });\n  }\n\n  const tweetCards = searchresult.map(tweet => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: `1px solid black`,\n        borderRadius: `13px`,\n        fontWeight: `400`,\n        fontStyle: `normal`,\n        padding: `.5em`,\n        margin: `.4em auto .4em auto`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: tweet.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), tweet.type === 'photo' ? /*#__PURE__*/_jsxDEV(Image, {\n        result: props.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 43\n      }, this) : '', tweet.type === 'video' ? /*#__PURE__*/_jsxDEV(Video, {\n        result: props.result\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 43\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDC9A: \", tweet.favorite_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDD01: \", tweet.retweet_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, tweet.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchContainer\",\n    style: {\n      position: 'absolute',\n      top: '50px',\n      left: '0px',\n      width: '100vw',\n      height: '100%',\n      backgroundColor: 'rgba(255, 251, 251, 0.3)',\n      backgroundImage: `url(${TV})`,\n      backgroundBlendMode: 'lighten',\n      zIndex: '1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBtnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnUser\",\n        onClick: handleClickUser,\n        onMouseEnter: handleHoverOver1,\n        onMouseLeave: handleHoverOut1,\n        style: {\n          border: `${hover1}`\n        },\n        children: \"Search by User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnContent\",\n        onClick: handleClickContent,\n        onMouseEnter: handleHoverOver2,\n        onMouseLeave: handleHoverOut2,\n        style: {\n          border: `${hover2}`\n        },\n        children: \"Search by Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type search item here...\",\n        value: inputValue,\n        onChange: event => setInputValue(cleanData(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResultContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResult\",\n        children: [tweetCards, console.log(searchresult), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: `600`,\n          paddingBottom: `1em`\n        },\n        children: [\"Why did I build this?  Read the blog post \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 64\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js"],"names":["React","useState","TV","DOMpurify","axios","cleanData","userInput","sanitize","Search","searchresult","setSearchresult","getTweetsButton","setGetTweetsButton","inputValue","setInputValue","errorValueUser","setErrorValueUser","errorValueContent","setErrorValueContent","hover1","setHover1","hover2","setHover2","searchTweets","search","get","err","console","log","searchByUsername","searchUser","id","handleHoverOver1","handleHoverOut1","handleHoverOver2","handleHoverOut2","handleClickUser","then","res","Object","keys","data","length","usernameArray","forEach","element","username","public_metrics","retweet_count","handleClickContent","created_at","text","url","type","like_count","tweetCards","map","tweet","border","borderRadius","fontWeight","fontStyle","padding","margin","props","result","favorite_count","position","top","left","width","height","backgroundColor","backgroundImage","backgroundBlendMode","zIndex","event","target","value","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\nimport DOMpurify from 'dompurify'\nimport axios from 'axios'\n\nfunction cleanData(userInput) {\n    return DOMpurify.sanitize(userInput)\n}   \n\nexport default function Search() {\n\n    const [searchresult, setSearchresult] = useState('')\n    const [getTweetsButton, setGetTweetsButton] = useState(false)\n    const [inputValue, setInputValue] = useState('')\n    const [errorValueUser, setErrorValueUser] = useState(false)\n    const [errorValueContent, setErrorValueContent] = useState(false)\n    const [hover1, setHover1] = useState('')\n    const [hover2, setHover2] = useState('')\n\n    //need to make inputValue more secure - user can only input string etc\n\nasync function searchTweets() {  \n    try {\n        var search = await axios.get(`/api/searchdata?search=${inputValue}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }\n}\n\nasync function searchByUsername() {\n    try {\n        var search = await axios.get(`/api/searchByUsername?search=${inputValue}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }    \n}\n\nasync function searchUser(id) {  \n    try {\n        var search = await axios.get(`/api/searchByUser?search=${id}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }\n}\n\nfunction handleHoverOver1() {\n   setHover1(`3px solid aqua`)\n}\n\nfunction handleHoverOut1() {\n    setHover1(``)\n}\n\nfunction handleHoverOver2() {\n    setHover2(`3px solid aqua`)\n}\n \nfunction handleHoverOut2() {\n    setHover2(``)\n}\n\nfunction handleClickUser() {\n        setSearchresult('')\n        setErrorValueContent(false)\n            searchByUsername() \n                .then(res=>{\n                    if (Object.keys(res.data).length === 0) {\n                        setErrorValueUser(true)\n                    } else {\n                        setErrorValueUser(false)\n                    let usernameArray = res.data.data;\n                    console.log(usernameArray[0])\n                            usernameArray.forEach(element=> {\n                                console.log('username :', element.username)\n                                searchUser(element.id)\n                                    .then(res=>{\n                                    console.log(res.data)\n                                    setSearchresult(res.data[0].public_metrics.retweet_count)\n                                    })\n                                })\n                            }\n                    //}\n                    //var tweetsArray = res.data.statuses;\n                    //console.log(tweetsArray[0].user.name)\n                    // var newTweetsArray = tweetsArray.map(tweet => {\n                    //     return <div key={tweet.id}>{tweet.text} </div>})\n                    //     setSearchresult(newTweetsArray)\n                    })          \n        }\n        \n\nfunction handleClickContent() {\n            setSearchresult('')\n            setErrorValueUser(false)\n            searchTweets() \n                .then(res=>{\n                    console.log(res.data)\n                    if (Object.keys(res.data).length === 0) {\n                        setErrorValueUser(true)\n                    } else {\n                        console.log(res.data)\n                        setSearchresult([\n                            {\n                                id: res.data[0].id,\n                                created_at: res.data[0].created_at,\n                                text: res.data[0].text,\n                                url: res.data[0].url,\n                                type: res.data[0].type,\n                                like_count: res.data[0].public_metrics.like_count,\n                                retweet_count: res.data[0].public_metrics.retweet_count\n                            },\n                            {},\n                            {},\n                            {},\n                            {},\n                            {},\n                            {},\n                            {},\n                            {},\n                            {}\n                        ])\n\n                    // var tweetsArray = res.data.statuses;\n\n                    // var newTweetsArray = tweetsArray.map(tweet => {\n                    //     return <div key={tweet.id}\n                    //         style={{border: `1px solid black`,\n                    //                 borderRadius: `13px`,\n                    //                 fontWeight: `400`,\n                    //                 fontStyle: `normal`,\n                    //                 padding: `.5em`,\n                    //                 margin: `.4em auto .4em auto`\n                    //                 }}\n                    //             >\n                    //         <p\n                    //             style={{textDecoration: `underline`}}\n                    //         >{tweet.user.screen_name}</p>\n                    //         <p>{tweet.text}</p>\n\n                    //         {tweet.entities.media ? tweet.entities.media.map(element => {\n                    //             return <img key={element.id} src={element.media_url_https} alt='gif' width='100%' style={{borderRadius: `13px`}}></img>\n                    //             }) : ''}\n                                \n                    //         {tweet.extended_entities ? tweet.extended_entities.media.map(element=> {\n                    //             console.log(element.video_info.variants[0].content_type)\n                    //             return  <video key={element.id} controls width='680'>\n                    //                     <source src={element.video_info.variants[0].url} type={element.video_info.variants[0].content_type}></source>\n                    //                     </video> \n                    //         }) : ''}                        \n\n                    //         <p>üíö: {tweet.favorite_count}</p>\n                    //         <p>üîÅ: {tweet.retweet_count}</p>\n                    //         </div>\n                    //         })\n                    //     setSearchresult(newTweetsArray)\n                    \n                //} else {\n                    //console.log('nothing')\n                    //setErrorValueContent(true)\n                //}\n                    }\n            })            \n        }\n\n\n    const tweetCards = searchresult.map(tweet => { \n       return <div \n                key={tweet.id}\n                style={{\n                    border: `1px solid black`,\n                    borderRadius: `13px`,\n                    fontWeight: `400`,\n                    fontStyle: `normal`,\n                    padding: `.5em`,\n                    margin: `.4em auto .4em auto`\n                    }}\n                    >\n                <p>{tweet.text}</p>\n\n                {tweet.type === 'photo' ? <Image result={props.result}/> : '' }\n                {tweet.type === 'video' ? <Video result={props.result} /> : '' }\n                                \n                <p>üíö: {tweet.favorite_count}</p>\n                <p>üîÅ: {tweet.retweet_count}</p>\n                </div>\n      })\n   \n    return (\n        <div className=\"searchContainer\"\n            style={{\n                position: 'absolute',\n                top: '50px',\n                left: '0px',\n                width: '100vw',\n                height: '100%',\n                backgroundColor: 'rgba(255, 251, 251, 0.3)',\n                backgroundImage: `url(${TV})`,\n                backgroundBlendMode: 'lighten',\n                zIndex: '1'\n            }}\n        >\n            <div className=\"searchBtnsContainer\">\n                <button \n                    className=\"searchBtnUser\"\n                    onClick={handleClickUser}\n                    onMouseEnter={handleHoverOver1}\n                    onMouseLeave={handleHoverOut1}\n                    style={{\n                        border:`${hover1}`}}\n                >Search by User</button>\n                <button \n                    className=\"searchBtnContent\"\n                    onClick={handleClickContent}\n                    onMouseEnter={handleHoverOver2}\n                    onMouseLeave={handleHoverOut2}\n                    style={{\n                        border:`${hover2}`}}\n                >Search by Content</button>\n                <input \n                    type=\"text\"     \n                    placeholder=\"Type search item here...\"\n                    value={inputValue}\n                    onChange={event=>setInputValue(cleanData(event.target.value))}>\n                </input>\n            </div>\n            <div className=\"searchResultContainer\">\n                <div className=\"searchResult\">\n                    {tweetCards}\n                    {console.log(searchresult)}\n                    <p>{errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``}</p>\n                    <p>{errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``}</p>\n                </div> \n                    <p\n                        style={{\n                            fontWeight: `600`,\n                            paddingBottom: `1em`\n                        }}\n                    >Why did I build this?  Read the blog post <a href=\"#\">here.</a></p> \n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}