{"ast":null,"code":"var _jsxFileName = \"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport TV from './pics/TV.png'; //import test from './test'\n\nimport DOMpurify from 'dompurify';\nimport { json } from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction cleanData(userInput) {\n  return DOMpurify.sanitize(userInput);\n}\n\nexport default function Search() {\n  const [searchresult, setSearchresult] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [errorValueUser, setErrorValueUser] = useState(false);\n  const [errorValueContent, setErrorValueContent] = useState(false);\n\n  function handleClickUser() {\n    setSearchresult('');\n    fetch('/api/showcasedata').then(response => response.json()).then(jsonData => {\n      jsonData.forEach(object => {\n        if (object.username === inputValue) {\n          setSearchresult({\n            username: object.username,\n            text: object.text,\n            retweetCount: object.retweetCount,\n            favoritedCount: object.favoritedCount\n          });\n        } else {\n          setErrorValue(true);\n        }\n      });\n    });\n  }\n\n  function handleClickContent() {\n    setSearchresult('');\n    fetch('/api/showcasedata').then(response => response.json()).then(jsonData => {\n      jsonData.forEach(object => {\n        if (Object.values(object).includes(inputValue)) {\n          setSearchresult({\n            username: object.username,\n            text: object.text,\n            retweetCount: object.retweetCount,\n            favoritedCount: object.favoritedCount\n          });\n        } else {\n          setErrorValueContent(true);\n        }\n      });\n    });\n  }\n\n  console.log(searchresult.username);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchContainer\",\n    style: {\n      position: 'absolute',\n      top: '50px',\n      left: '0px',\n      width: '100vw',\n      height: '100%',\n      backgroundColor: 'rgba(255, 251, 251, 0.3)',\n      backgroundImage: `url(${TV})`,\n      backgroundBlendMode: 'lighten',\n      zIndex: '1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBtnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnUser\",\n        onClick: handleClickUser,\n        children: \"Search by User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnContent\",\n        onClick: handleClickContent,\n        children: \"Search by Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type search item here...\",\n        value: inputValue,\n        onChange: event => setInputValue(cleanData(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResultContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResult\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: searchresult.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: searchresult.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Favorited: \", searchresult.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Retweeted: \", searchresult.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorValueUser ? \"I couldn't find anyone Twitter by that username.  Please try again :) \" : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Why did I build this?  Read the blog post \", /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js"],"names":["React","useState","TV","DOMpurify","json","cleanData","userInput","sanitize","Search","searchresult","setSearchresult","inputValue","setInputValue","errorValueUser","setErrorValueUser","errorValueContent","setErrorValueContent","handleClickUser","fetch","then","response","jsonData","forEach","object","username","text","retweetCount","favoritedCount","setErrorValue","handleClickContent","Object","values","includes","console","log","position","top","left","width","height","backgroundColor","backgroundImage","backgroundBlendMode","zIndex","event","target","value","id","title"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\n//import test from './test'\nimport DOMpurify from 'dompurify'\nimport { json } from 'express'\n\nfunction cleanData(userInput) {\n    return DOMpurify.sanitize(userInput)\n}   \n\nexport default function Search() {\n\n    const [searchresult, setSearchresult] = useState('')\n    const [inputValue, setInputValue] = useState('')\n    const [errorValueUser, setErrorValueUser] = useState(false)\n    const [errorValueContent, setErrorValueContent] = useState(false)\n\n    function handleClickUser() {\n        setSearchresult('')\n        fetch('/api/showcasedata')\n                    .then(response => response.json())\n                    .then(jsonData => {\n            jsonData.forEach(object => {\n                if(object.username === inputValue) {\n                    setSearchresult({\n                        username: object.username,\n                        text: object.text,\n                        retweetCount: object.retweetCount,\n                        favoritedCount: object.favoritedCount\n                        })\n                } else {\n                    setErrorValue(true)\n                }\n            })\n    })\n    }\n\n    function handleClickContent() {\n        setSearchresult('')\n        fetch('/api/showcasedata')\n                    .then(response => response.json())\n                    .then(jsonData => {\n        jsonData.forEach((object) => {\n            if(Object.values(object).includes(inputValue)) {\n                 setSearchresult({\n                                username: object.username,\n                                text: object.text,\n                                retweetCount: object.retweetCount,\n                                favoritedCount: object.favoritedCount\n                                })\n                            } else {\n                                setErrorValueContent(true)\n                            }\n                        })\n                    })\n                }\n\n    console.log(searchresult.username)\n\n    return (\n        <div className=\"searchContainer\"\n            style={{\n                position: 'absolute',\n                top: '50px',\n                left: '0px',\n                width: '100vw',\n                height: '100%',\n                backgroundColor: 'rgba(255, 251, 251, 0.3)',\n                backgroundImage: `url(${TV})`,\n                backgroundBlendMode: 'lighten',\n                zIndex: '1'\n            }}\n        >\n            <div className=\"searchBtnsContainer\">\n                <button \n                    className=\"searchBtnUser\"\n                    onClick={handleClickUser}\n                >Search by User</button>\n                <button \n                    className=\"searchBtnContent\"\n                    onClick={handleClickContent}\n                >Search by Content</button>\n                <input \n                    type=\"text\"     \n                    placeholder=\"Type search item here...\"\n                    value={inputValue}\n                    onChange={event=>setInputValue(cleanData(event.target.value))}>\n                </input>\n            </div>\n            <div className=\"searchResultContainer\">\n                <div className=\"searchResult\">\n                    <p>{searchresult.username}</p>\n                    <p>{searchresult.text}</p>\n                    {/* <p>Favorited: {searchresult.favoritedCount}</p>\n                    <p>Retweeted: {searchresult.retweetCount}</p> */}\n                    <p>Favorited: {searchresult.id}</p> \n                    <p>Retweeted: {searchresult.title}</p>\n                    <p>{errorValueUser ? \"I couldn't find anyone Twitter by that username.  Please try again :) \" : ''}</p>\n                </div> \n                    <p>Why did I build this?  Read the blog post <a>here.</a></p> \n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}