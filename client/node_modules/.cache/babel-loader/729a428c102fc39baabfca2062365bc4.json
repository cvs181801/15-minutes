{"ast":null,"code":"var _jsxFileName = \"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport TV from './pics/TV.png';\nimport DOMpurify from 'dompurify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction cleanData(userInput) {\n  return DOMpurify.sanitize(userInput);\n}\n\nexport default function Search() {\n  const [searchresult, setSearchresult] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [errorValueUser, setErrorValueUser] = useState(false);\n  const [errorValueContent, setErrorValueContent] = useState(false); //need to make inputValue more secure - user can only input string etc\n\n  function handleClickUser() {\n    setSearchresult('');\n    setErrorValueContent(false);\n    const search = axios.get(`/api/searchdata?search=${inputValue}`).then(response => response.json()).then(jsonData => {\n      console.log(jsonData); //jsonData.forEach(object => {\n      //if(object.username === inputValue) {\n      //setSearchresult({\n      // username: object.username,\n      // text: object.text,\n      // retweetCount: object.retweetCount,\n      // favoritedCount: object.favoritedCount\n      //})\n      //} else {\n      //setErrorValueUser(true)\n      //}\n      //})\n    });\n  }\n\n  function handleClickContent() {\n    setSearchresult('');\n    setErrorValueUser(false);\n    fetch('/api/searchdata').then(response => response.json()).then(jsonData => {\n      console.log(jsonData); //jsonData.forEach((object) => {\n      //if(Object.values(object).includes(inputValue)) {\n      //setSearchresult({\n      // username: object.username,\n      // text: object.text,\n      // retweetCount: object.retweetCount,\n      // favoritedCount: object.favoritedCount\n      //             })\n      //         } else {\n      //             setErrorValueContent(true)\n      //         }\n      //     })\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchContainer\",\n    style: {\n      position: 'absolute',\n      top: '50px',\n      left: '0px',\n      width: '100vw',\n      height: '100%',\n      backgroundColor: 'rgba(255, 251, 251, 0.3)',\n      backgroundImage: `url(${TV})`,\n      backgroundBlendMode: 'lighten',\n      zIndex: '1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBtnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnUser\",\n        onClick: handleClickUser,\n        children: \"Search by User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnContent\",\n        onClick: handleClickContent,\n        children: \"Search by Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type search item here...\",\n        value: inputValue,\n        onChange: event => setInputValue(cleanData(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResultContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResult\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: searchresult.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: searchresult.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Favorited: \", searchresult.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Retweeted: \", searchresult.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Why did I build this?  Read the blog post \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js"],"names":["React","useState","TV","DOMpurify","axios","cleanData","userInput","sanitize","Search","searchresult","setSearchresult","inputValue","setInputValue","errorValueUser","setErrorValueUser","errorValueContent","setErrorValueContent","handleClickUser","search","get","then","response","json","jsonData","console","log","handleClickContent","fetch","position","top","left","width","height","backgroundColor","backgroundImage","backgroundBlendMode","zIndex","event","target","value","username","text","id","title"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\nimport DOMpurify from 'dompurify'\nimport axios from 'axios'\n\nfunction cleanData(userInput) {\n    return DOMpurify.sanitize(userInput)\n}   \n\nexport default function Search() {\n\n    const [searchresult, setSearchresult] = useState('')\n    const [inputValue, setInputValue] = useState('')\n    const [errorValueUser, setErrorValueUser] = useState(false)\n    const [errorValueContent, setErrorValueContent] = useState(false)\n\n    //need to make inputValue more secure - user can only input string etc\n\n    function handleClickUser() {\n        setSearchresult('')\n        setErrorValueContent(false)\n        const search =  axios.get(`/api/searchdata?search=${inputValue}`)\n                    .then(response => response.json())\n                    .then(jsonData => {\n                        console.log(jsonData)\n            //jsonData.forEach(object => {\n                //if(object.username === inputValue) {\n\n                    //setSearchresult({\n                        // username: object.username,\n                        // text: object.text,\n                        // retweetCount: object.retweetCount,\n                        // favoritedCount: object.favoritedCount\n                        //})\n                //} else {\n                    //setErrorValueUser(true)\n                //}\n            //})\n        })\n    }\n\n    function handleClickContent() {\n        setSearchresult('')\n        setErrorValueUser(false)\n        fetch('/api/searchdata')\n                    .then(response => response.json())\n                    .then(jsonData => {\n                        console.log(jsonData)\n        //jsonData.forEach((object) => {\n            //if(Object.values(object).includes(inputValue)) {\n                 //setSearchresult({\n                                // username: object.username,\n                                // text: object.text,\n                                // retweetCount: object.retweetCount,\n                                // favoritedCount: object.favoritedCount\n                    //             })\n                    //         } else {\n                    //             setErrorValueContent(true)\n                    //         }\n                    //     })\n                     })\n                }\n\n\n    return (\n        <div className=\"searchContainer\"\n            style={{\n                position: 'absolute',\n                top: '50px',\n                left: '0px',\n                width: '100vw',\n                height: '100%',\n                backgroundColor: 'rgba(255, 251, 251, 0.3)',\n                backgroundImage: `url(${TV})`,\n                backgroundBlendMode: 'lighten',\n                zIndex: '1'\n            }}\n        >\n            <div className=\"searchBtnsContainer\">\n                <button \n                    className=\"searchBtnUser\"\n                    onClick={handleClickUser}\n                >Search by User</button>\n                <button \n                    className=\"searchBtnContent\"\n                    onClick={handleClickContent}\n                >Search by Content</button>\n                <input \n                    type=\"text\"     \n                    placeholder=\"Type search item here...\"\n                    value={inputValue}\n                    onChange={event=>setInputValue(cleanData(event.target.value))}>\n                </input>\n            </div>\n            <div className=\"searchResultContainer\">\n                <div className=\"searchResult\">\n                    <p>{searchresult.username}</p>\n                    <p>{searchresult.text}</p>\n                    {/* <p>Favorited: {searchresult.favoritedCount}</p>\n                    <p>Retweeted: {searchresult.retweetCount}</p> */}\n                    <p>Favorited: {searchresult.id}</p> \n                    <p>Retweeted: {searchresult.title}</p>\n                    <p>{errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``}</p>\n                    <p>{errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``}</p>\n                </div> \n                    <p>Why did I build this?  Read the blog post <a href=\"#\">here.</a></p> \n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}