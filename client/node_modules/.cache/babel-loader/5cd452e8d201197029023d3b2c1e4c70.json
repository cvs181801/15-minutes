{"ast":null,"code":"var _jsxFileName = \"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport TV from './pics/TV.png';\nimport DOMpurify from 'dompurify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction cleanData(userInput) {\n  return DOMpurify.sanitize(userInput);\n}\n\nexport default function Search() {\n  const [searchresult, setSearchresult] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  const [errorValueUser, setErrorValueUser] = useState(false);\n  const [errorValueContent, setErrorValueContent] = useState(false); //need to make inputValue more secure - user can only input string etc\n\n  async function searchUser() {\n    try {\n      var search = await axios.get(`/api/searchdata?search=${inputValue}`);\n      return search;\n    } catch (err) {\n      console.log(err);\n    } //jsonData.forEach(object => {\n    //if(object.username === inputValue) {\n    //setSearchresult({\n    // username: object.username,\n    // text: object.text,\n    // retweetCount: object.retweetCount,\n    // favoritedCount: object.favoritedCount\n    //})\n    //} else {\n    //setErrorValueUser(true)\n    //}\n    //})\n\n  }\n\n  function handleClickUser() {\n    setSearchresult('');\n    setErrorValueContent(false);\n    searchUser().then(res => {\n      console.log(res.data.statuses);\n      var tweetsArray = res.data.statuses; //console.log(tweetsArray[0].user.name)\n\n      var newTweetsArray = tweetsArray.map(tweet => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [tweet.text, \" \"]\n        }, tweet.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 32\n        }, this);\n      });\n      setSearchresult(newTweetsArray);\n    });\n  }\n\n  function handleClickContent() {\n    setSearchresult('');\n    setErrorValueUser(false);\n    searchUser().then(res => {\n      if (res.data.statuses) {\n        console.log(res.data.statuses);\n        var tweetsArray = res.data.statuses; //console.log(tweetsArray[0].user.name, tweetsArray[0].user.screen_name)\n\n        var newTweetsArray = tweetsArray.map(tweet => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: `1px solid black`,\n              borderRadius: `13px`,\n              fontWeight: `400`,\n              fontStyle: `normal`,\n              padding: `.5em`,\n              margin: `.4em auto .4em auto`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textDecoration: `underline`\n              },\n              children: tweet.user.screen_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: tweet.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), tweet.entities.media ? tweet.entities.media.map(element => {\n              return /*#__PURE__*/_jsxDEV(\"img\", {\n                src: element.media_url_https,\n                alt: \"gif\",\n                width: \"100%\",\n                style: {\n                  borderRadius: `13px`\n                }\n              }, element.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 40\n              }, this);\n            }) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDC9A: \", tweet.favorite_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uD83D\\uDD01: \", tweet.retweet_count]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, tweet.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 32\n          }, this);\n        });\n        setSearchresult(newTweetsArray);\n      } else {\n        console.log('nothing');\n        setErrorValueContent(true);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchContainer\",\n    style: {\n      position: 'absolute',\n      top: '50px',\n      left: '0px',\n      width: '100vw',\n      height: '100%',\n      backgroundColor: 'rgba(255, 251, 251, 0.3)',\n      backgroundImage: `url(${TV})`,\n      backgroundBlendMode: 'lighten',\n      zIndex: '1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBtnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnUser\",\n        onClick: handleClickUser,\n        children: \"Search by User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnContent\",\n        onClick: handleClickContent,\n        children: \"Search by Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type search item here...\",\n        value: inputValue,\n        onChange: event => setInputValue(cleanData(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResultContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResult\",\n        children: [searchresult, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Why did I build this?  Read the blog post \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js"],"names":["React","useState","TV","DOMpurify","axios","cleanData","userInput","sanitize","Search","searchresult","setSearchresult","inputValue","setInputValue","errorValueUser","setErrorValueUser","errorValueContent","setErrorValueContent","searchUser","search","get","err","console","log","handleClickUser","then","res","data","statuses","tweetsArray","newTweetsArray","map","tweet","text","id","handleClickContent","border","borderRadius","fontWeight","fontStyle","padding","margin","textDecoration","user","screen_name","entities","media","element","media_url_https","favorite_count","retweet_count","position","top","left","width","height","backgroundColor","backgroundImage","backgroundBlendMode","zIndex","event","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\nimport DOMpurify from 'dompurify'\nimport axios from 'axios'\n\nfunction cleanData(userInput) {\n    return DOMpurify.sanitize(userInput)\n}   \n\nexport default function Search() {\n\n    const [searchresult, setSearchresult] = useState('')\n    const [inputValue, setInputValue] = useState('')\n    const [errorValueUser, setErrorValueUser] = useState(false)\n    const [errorValueContent, setErrorValueContent] = useState(false)\n\n    //need to make inputValue more secure - user can only input string etc\n\nasync function searchUser() {  \n    try {\n        var search = await axios.get(`/api/searchdata?search=${inputValue}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }\n    \n//jsonData.forEach(object => {\n//if(object.username === inputValue) {\n\n//setSearchresult({\n    // username: object.username,\n    // text: object.text,\n    // retweetCount: object.retweetCount,\n    // favoritedCount: object.favoritedCount\n    //})\n//} else {\n//setErrorValueUser(true)\n//}\n//})\n}\n\nfunction handleClickUser() {\n        setSearchresult('')\n        setErrorValueContent(false)\n            searchUser() \n                .then(res=>{\n                    console.log(res.data.statuses)\n                    var tweetsArray = res.data.statuses;\n                    //console.log(tweetsArray[0].user.name)\n                    var newTweetsArray = tweetsArray.map(tweet => {\n                        return <div key={tweet.id}>{tweet.text} </div>})\n                        setSearchresult(newTweetsArray)\n                    })          \n        }\n\n\nfunction handleClickContent() {\n            setSearchresult('')\n            setErrorValueUser(false)\n            searchUser() \n                .then(res=>{\n                    if(res.data.statuses) {\n                        console.log(res.data.statuses)\n\n                    var tweetsArray = res.data.statuses;\n                    //console.log(tweetsArray[0].user.name, tweetsArray[0].user.screen_name)\n\n                    var newTweetsArray = tweetsArray.map(tweet => {\n                        return <div key={tweet.id}\n                            style={{border: `1px solid black`,\n                                    borderRadius: `13px`,\n                                    fontWeight: `400`,\n                                    fontStyle: `normal`,\n                                    padding: `.5em`,\n                                    margin: `.4em auto .4em auto`\n                                    }}\n                                >\n                            <p\n                                style={{textDecoration: `underline`}}\n                            >{tweet.user.screen_name}</p>\n                            <p>{tweet.text}</p>\n\n                            {tweet.entities.media ? tweet.entities.media.map(element => {\n                                return <img key={element.id} src={element.media_url_https} alt='gif' width='100%' style={{borderRadius: `13px`}}></img>\n                                }) : ''}\n\n                            <p>💚: {tweet.favorite_count}</p>\n                            <p>🔁: {tweet.retweet_count}</p>\n                            </div>})\n                        setSearchresult(newTweetsArray)\n                    \n                } else {\n                    console.log('nothing')\n                    setErrorValueContent(true)\n                }\n            })                   \n        }\n\n\n    return (\n        <div className=\"searchContainer\"\n            style={{\n                position: 'absolute',\n                top: '50px',\n                left: '0px',\n                width: '100vw',\n                height: '100%',\n                backgroundColor: 'rgba(255, 251, 251, 0.3)',\n                backgroundImage: `url(${TV})`,\n                backgroundBlendMode: 'lighten',\n                zIndex: '1'\n            }}\n        >\n            <div className=\"searchBtnsContainer\">\n                <button \n                    className=\"searchBtnUser\"\n                    onClick={handleClickUser}\n                >Search by User</button>\n                <button \n                    className=\"searchBtnContent\"\n                    onClick={handleClickContent}\n                >Search by Content</button>\n                <input \n                    type=\"text\"     \n                    placeholder=\"Type search item here...\"\n                    value={inputValue}\n                    onChange={event=>setInputValue(cleanData(event.target.value))}>\n                </input>\n            </div>\n            <div className=\"searchResultContainer\">\n                <div className=\"searchResult\">\n                    {searchresult}\n                    {/* <video src='https://t.co/DL3bjbmV9f'>\n                        <source src=\"https://t.co/DL3bjbmV9f\" type='video/mp4'></source>\n                    </video> */}\n                    <p>{errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``}</p>\n                    <p>{errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``}</p>\n                </div> \n                    <p>Why did I build this?  Read the blog post <a href=\"#\">here.</a></p> \n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}