{"version":3,"file":"js/main.chunk.js","sources":["/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/index.css","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/App.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Home.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Image.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/ProfileImage.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Search.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/Showcase.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/ShowcaseResult.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/TweetCard.js","webpack:///./src/index.css?bb0a","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/index.js","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/pics/TV.png","/Users/casvalkyriespicer/Documents/GitHub/15-minutes/client/src/reportWebVitals.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./pics/TV.png\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Corben:wght@400;700&family=Racing+Sans+One&family=Work+Sans:wght@100;900&display=swap);\"]);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  margin: 0 auto;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\\n.App {\\n  text-align: center;\\n  font-family: 'Work Sans', sans-serif;\\n  font-style: italic;\\n  letter-spacing: .05rem;\\n}\\n\\n.container {\\n  font-family: 'Work Sans', sans-serif;\\n  font-size: 3rem;\\n  font-weight: 600;\\n  padding: .5em;\\n  width: 5.8em;\\n  /*height: 680px; */\\n  margin: .5em auto 0 auto;\\n  align-items: center;\\n  text-align: center;\\n  background-color: rgba(255, 251, 251, 0.3);\\n  background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n  background-blend-mode: lighten;\\n  border: 15px solid #000000;\\n  border-radius: 25%;\\n  box-shadow: -20px 10px rgb(48, 47, 47);\\n}\\n\\n.contentContainer {\\n  font-size: .9rem;\\n  letter-spacing: .1rem;\\n  line-height: 1.3rem;\\n  text-shadow: white -3px -3px;\\n}\\n\\n.contentContainer_blogtxt {\\n  margin-top: .3em;\\n}\\n\\n.buttonsContainer {\\n  display: flex;\\n  font-weight: 600;\\n  font-family: 'Work Sans', sans-serif;\\n  width: 88%;\\n  font-size: 1.1rem;\\n  justify-content: space-between;\\n  text-align: center;\\n  margin: 0 auto;\\n  z-index: 2;\\n  margin-top: .7em;\\n}\\n\\n.searchResultContainer {\\n  width: 299px;\\n  height: 717px;\\n  margin: 0 auto;\\n  background: #FFFFFF;\\n  border: 5px solid #000000;\\n  border-radius: 13px;\\n}\\n\\n.searchBtnsContainer {\\n  display: flex;\\n  justify-content: center;\\n  width: 23em;\\n  margin: 0 auto;\\n  padding: .3em;\\n}\\n\\n.searchBtnUser,\\n.searchBtnContent {\\n  font-size: .4rem;\\n  letter-spacing: .1rem;\\n  line-height: .8rem;\\n  text-transform: uppercase;\\n  text-align: center;\\n  width: 50px;\\n  height: 50px;\\n  margin: 0 .3em 0 .3em;\\n  background: #FFFFFF;\\n  border: 1px solid #000000;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n  cursor: pointer;\\n  padding: .1em;\\n}\\n\\n.searchBtnUser:hover,\\n.searchBtnContent:hover {\\n  border: 3px solid aqua;\\n}\\n\\n.searchBtnsContainer > input {\\n  width: 266px;\\n  height: 32px;\\n  background: #FFFFFF;\\n  border: 1px solid #000000;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n}\\n\\n.showcaseResultContainer {\\n  position: block;\\n  width: 322px;\\n  height: 597px;\\n  margin: 0 auto;\\n  background: #FFFFFF;\\n  border: 5px solid #000000;\\n  border-radius: 13px;\\n}\\n\\n.selectBtn{\\n  background: #FFFFFF;\\n  border: 1px solid #000000;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n  cursor: pointer;\\n  margin: 0 .2em 1em .2em;\\n  position: inline-block;\\n  height: 32px;\\n  width: 106px; \\n  background: #FFFFFF;\\n  font-size: .6rem;\\n  letter-spacing: .1rem;\\n  text-transform: uppercase;\\n  line-height: .8rem;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n}\\n\\n.selectBtn:hover {\\n  border: 4px solid aqua;\\n}\\n\\n.showcaseBtnsContainer {\\n  display: flex;\\n  flex-wrap: wrap;\\n  text-align: center;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin: .5em auto 1em auto;\\n  width: 322px;\\n  padding-bottom: .5em;\\n}\\n\\n.hoveredLink {\\n  color: magenta;\\n  text-shadow: indigo -2px -2px;\\n  transition: all .5s ease-in-out;\\n}\\n\\n.hoveredButton {\\n  border: 3px solid aqua;\\n  transition: all .5s ease-in-out;\\n}\\n\\n.active {\\n  color: magenta;\\n  text-shadow: indigo -2px -2px;\\n  transition: all .5s ease-in-out;\\n}\\n\\n.tweet {\\n  border: 1px solid black;\\n  border-radius: 13px;\\n}\\n\\n.tweet_card {\\n  text-align: left;\\n}\\n\\n#buttonBorder {\\n  border: 4px solid aqua;\\n}\\n\\n#buttonBorderThin {\\n  border: 3px solid aqua;\\n}\\n\\n@media (min-width: 600px) {\\n  .container {\\n    width: 677px;\\n    height: 470px;\\n    font-size: 2rem;\\n    margin: 1.5em auto 0 auto;\\n  }\\n\\n  .contentContainer {\\n    font-size: 1.3rem;\\n    text-shadow: white -3px -3px;\\n  }\\n\\n  .contentContainer_blogtxt {\\n    margin-top: 0;\\n  }\\n\\n  .searchResultContainer {\\n    width: 784px;\\n    height: 930px;\\n  }\\n  .searchResult,\\n  .showcaseResult {\\n    position: relative; \\n    border-left: 2px solid black;\\n    border-right: 2px solid black;\\n    border-top: 2px solid white;\\n    border-bottom: 2px solid white;\\n    margin: 0 auto;\\n    width: 60%;\\n    height: 100%; \\n    overflow-y: scroll;\\n    font-weight: 700;\\n    padding: .4em;\\n  }\\n  \\n  .showcaseResultContainer {\\n    width: 778px;\\n    height: 789px;\\n    background: #FFFFFF;\\n    border: 5px solid #000000;\\n    border-radius: 13px;\\n  }\\n\\n  .showcaseBtnsContainer {\\n    width: 778px;\\n  }\\n}\\n\\n@media (min-width: 1025px) {\\n\\n  .container {\\n    width: 857px;\\n    height: 477px;\\n    margin: 3em auto 0 auto;\\n    font-size: 2rem;\\n  }\\n\\n  .contentContainer {\\n    font-size: 1.2rem;\\n    text-shadow: white -3px -3px;\\n  }\\n\\n  .contentContainer_blogtxt {\\n    margin-top: 0;\\n  }\\n\\n  .buttonsContainer { \\n    width: 40%;\\n  }\\n \\n  .searchResultContainer {\\n    width: 1232px;\\n    height: 697px;\\n  }\\n\\n  .showcaseResultContainer {\\n    width: 1219px;\\n    height: 583px;\\n    background: #FFFFFF;\\n    border: 5px solid #000000;\\n    border-radius: 13px;\\n  }\\n  .showcaseBtnsContainer {\\n    width: 1219px;\\n  }\\n\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/index.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"body {\\n  margin: 0 auto;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n* {\\n  box-sizing: border-box;\\n}\\n\\n@import url('https://fonts.googleapis.com/css2?family=Corben:wght@400;700&family=Racing+Sans+One&family=Work+Sans:wght@100;900&display=swap');\\n\\n.App {\\n  text-align: center;\\n  font-family: 'Work Sans', sans-serif;\\n  font-style: italic;\\n  letter-spacing: .05rem;\\n}\\n\\n.container {\\n  font-family: 'Work Sans', sans-serif;\\n  font-size: 3rem;\\n  font-weight: 600;\\n  padding: .5em;\\n  width: 5.8em;\\n  /*height: 680px; */\\n  margin: .5em auto 0 auto;\\n  align-items: center;\\n  text-align: center;\\n  background-color: rgba(255, 251, 251, 0.3);\\n  background-image: url('./pics/TV.png');\\n  background-blend-mode: lighten;\\n  border: 15px solid #000000;\\n  border-radius: 25%;\\n  box-shadow: -20px 10px rgb(48, 47, 47);\\n}\\n\\n.contentContainer {\\n  font-size: .9rem;\\n  letter-spacing: .1rem;\\n  line-height: 1.3rem;\\n  text-shadow: white -3px -3px;\\n}\\n\\n.contentContainer_blogtxt {\\n  margin-top: .3em;\\n}\\n\\n.buttonsContainer {\\n  display: flex;\\n  font-weight: 600;\\n  font-family: 'Work Sans', sans-serif;\\n  width: 88%;\\n  font-size: 1.1rem;\\n  justify-content: space-between;\\n  text-align: center;\\n  margin: 0 auto;\\n  z-index: 2;\\n  margin-top: .7em;\\n}\\n\\n.searchResultContainer {\\n  width: 299px;\\n  height: 717px;\\n  margin: 0 auto;\\n  background: #FFFFFF;\\n  border: 5px solid #000000;\\n  border-radius: 13px;\\n}\\n\\n.searchBtnsContainer {\\n  display: flex;\\n  justify-content: center;\\n  width: 23em;\\n  margin: 0 auto;\\n  padding: .3em;\\n}\\n\\n.searchBtnUser,\\n.searchBtnContent {\\n  font-size: .4rem;\\n  letter-spacing: .1rem;\\n  line-height: .8rem;\\n  text-transform: uppercase;\\n  text-align: center;\\n  width: 50px;\\n  height: 50px;\\n  margin: 0 .3em 0 .3em;\\n  background: #FFFFFF;\\n  border: 1px solid #000000;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n  cursor: pointer;\\n  padding: .1em;\\n}\\n\\n.searchBtnUser:hover,\\n.searchBtnContent:hover {\\n  border: 3px solid aqua;\\n}\\n\\n.searchBtnsContainer > input {\\n  width: 266px;\\n  height: 32px;\\n  background: #FFFFFF;\\n  border: 1px solid #000000;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n}\\n\\n.showcaseResultContainer {\\n  position: block;\\n  width: 322px;\\n  height: 597px;\\n  margin: 0 auto;\\n  background: #FFFFFF;\\n  border: 5px solid #000000;\\n  border-radius: 13px;\\n}\\n\\n.selectBtn{\\n  background: #FFFFFF;\\n  border: 1px solid #000000;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n  cursor: pointer;\\n  margin: 0 .2em 1em .2em;\\n  position: inline-block;\\n  height: 32px;\\n  width: 106px; \\n  background: #FFFFFF;\\n  font-size: .6rem;\\n  letter-spacing: .1rem;\\n  text-transform: uppercase;\\n  line-height: .8rem;\\n  box-sizing: border-box;\\n  border-radius: 13px;\\n}\\n\\n.selectBtn:hover {\\n  border: 4px solid aqua;\\n}\\n\\n.showcaseBtnsContainer {\\n  display: flex;\\n  flex-wrap: wrap;\\n  text-align: center;\\n  align-items: center;\\n  justify-content: space-between;\\n  margin: .5em auto 1em auto;\\n  width: 322px;\\n  padding-bottom: .5em;\\n}\\n\\n.hoveredLink {\\n  color: magenta;\\n  text-shadow: indigo -2px -2px;\\n  transition: all .5s ease-in-out;\\n}\\n\\n.hoveredButton {\\n  border: 3px solid aqua;\\n  transition: all .5s ease-in-out;\\n}\\n\\n.active {\\n  color: magenta;\\n  text-shadow: indigo -2px -2px;\\n  transition: all .5s ease-in-out;\\n}\\n\\n.tweet {\\n  border: 1px solid black;\\n  border-radius: 13px;\\n}\\n\\n.tweet_card {\\n  text-align: left;\\n}\\n\\n#buttonBorder {\\n  border: 4px solid aqua;\\n}\\n\\n#buttonBorderThin {\\n  border: 3px solid aqua;\\n}\\n\\n@media (min-width: 600px) {\\n  .container {\\n    width: 677px;\\n    height: 470px;\\n    font-size: 2rem;\\n    margin: 1.5em auto 0 auto;\\n  }\\n\\n  .contentContainer {\\n    font-size: 1.3rem;\\n    text-shadow: white -3px -3px;\\n  }\\n\\n  .contentContainer_blogtxt {\\n    margin-top: 0;\\n  }\\n\\n  .searchResultContainer {\\n    width: 784px;\\n    height: 930px;\\n  }\\n  .searchResult,\\n  .showcaseResult {\\n    position: relative; \\n    border-left: 2px solid black;\\n    border-right: 2px solid black;\\n    border-top: 2px solid white;\\n    border-bottom: 2px solid white;\\n    margin: 0 auto;\\n    width: 60%;\\n    height: 100%; \\n    overflow-y: scroll;\\n    font-weight: 700;\\n    padding: .4em;\\n  }\\n  \\n  .showcaseResultContainer {\\n    width: 778px;\\n    height: 789px;\\n    background: #FFFFFF;\\n    border: 5px solid #000000;\\n    border-radius: 13px;\\n  }\\n\\n  .showcaseBtnsContainer {\\n    width: 778px;\\n  }\\n}\\n\\n@media (min-width: 1025px) {\\n\\n  .container {\\n    width: 857px;\\n    height: 477px;\\n    margin: 3em auto 0 auto;\\n    font-size: 2rem;\\n  }\\n\\n  .contentContainer {\\n    font-size: 1.2rem;\\n    text-shadow: white -3px -3px;\\n  }\\n\\n  .contentContainer_blogtxt {\\n    margin-top: 0;\\n  }\\n\\n  .buttonsContainer { \\n    width: 40%;\\n  }\\n \\n  .searchResultContainer {\\n    width: 1232px;\\n    height: 697px;\\n  }\\n\\n  .showcaseResultContainer {\\n    width: 1219px;\\n    height: 583px;\\n    background: #FFFFFF;\\n    border: 5px solid #000000;\\n    border-radius: 13px;\\n  }\\n  .showcaseBtnsContainer {\\n    width: 1219px;\\n  }\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import './index.css';\nimport React, {useState} from 'react'\nimport {BrowserRouter, NavLink, Route, Routes} from \"react-router-dom\"\nimport Showcase from './Showcase'\nimport Search from './Search'\nimport Home from './Home'\n\nfunction App() {\n\nconst [hoveredSearch, setHoveredSearch] = useState('')\nconst [hoveredHome, setHoveredHome] = useState('')\nconst [hoveredShow, setHoveredShow] = useState('')\n\nfunction handleHoverOverSearch() {\n  setHoveredSearch('hoveredLink')\n } \n\n function handleHoverOutSearch() {\n    setHoveredSearch('')\n }\n\n function handleHoverOverHome() {\n  setHoveredHome('hoveredLink')\n } \n\n function handleHoverOutHome() {\n    setHoveredHome('')\n }\n\n function handleHoverOverShow() {\n  setHoveredShow('hoveredLink')\n } \n\n function handleHoverOutShow() {\n    setHoveredShow('')\n }\n\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n     \n      <div className=\"buttonsContainer\">\n          <NavLink exact=\"true\" activeclassname=\"active\" to=\"/search\"\n            style={{\n              textDecoration: 'none'\n            \n            }}\n            onMouseEnter={handleHoverOverSearch}\n            onMouseLeave={handleHoverOutSearch}\n            className= {hoveredSearch}\n            \n          >Search Tweets</NavLink>  \n          <NavLink exact=\"true\" activeclassname=\"active\" to=\"/\"\n            style={{\n              textDecoration: 'none'\n              \n            }}\n            onMouseEnter={handleHoverOverHome}\n            onMouseLeave={handleHoverOutHome}\n            className= {hoveredHome}\n          >Home</NavLink>  \n          <NavLink exact=\"true\" activeclassname=\"active\" to=\"/showcase\"\n            style={{\n              textDecoration: 'none'\n            }}\n            onMouseEnter={handleHoverOverShow}\n            onMouseLeave={handleHoverOutShow}\n            className= {hoveredShow}\n          >Go to Showcase</NavLink>  \n      </div>\n        <Routes>\n            <Route path=\"/search\" element={<Search />} />\n            <Route path=\"/showcase\" element={<Showcase />} />\n            <Route path=\"/\" element={<Home />} />\n        </Routes>\n      \n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport './index.css';\n\nexport default function Home() {\n    return (\n        <div>\n            <div className=\"container\">\n                <div className=\"contentContainer\">\n                    <h1>15 Minutes</h1>\n                    <br/>\n                    <p>A new way to search Twitter.\n                    <br/> \n                    <br/>\n                    How will you use your 15 minutes? \n                    <br/>\n                    <br/>\n                    Select ‘Go to Showcase’ to browse tweets from celebrities using their fame for good.</p>\n                    <br/>\n                    <br/>\n                    <p className=\"contentContainer_blogtxt\">Why did I build this?  Read the blog post <a href=\"#\">here.</a></p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Image(props) {\n    console.log(props.result)\n    return (\n        <div>\n            <img \n                src={props.result.url}\n                alt='image' \n                width='100%' \n                style={{borderRadius: `13px`}}>\n            </img> \n            \n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function ProfileImage(props) {\n    console.log(props)\n  return  <div>\n        <img\n            src={props.url ? props.url : ''}\n            alt='profile image' \n            width='100%' \n            style={{\n                borderRadius: `50%`,\n                height: `3em`,\n                width:`3em`\n                }}\n        ></img> \n    </div>;\n}\n","import React, {useState, useEffect} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\nimport axios from 'axios'\nimport TweetCard from './TweetCard'\n\nexport default function Search() {\n\nconst [searchresult, setSearchresult] = useState([])\nconst [getByUserButton, setGetByUserButton] = useState(false)\nconst [getByContentButton, setGetByContentButton] = useState(false)\nconst [inputValue, setInputValue] = useState('')\nconst [errorValueUser, setErrorValueUser] = useState(false)\nconst [errorValueContent, setErrorValueContent] = useState(false)\nconst [errorValueCharacters, setErrorValueCharacters] = useState('')\nconst [errorValueAuthorized, setErrorValueAuthorized] = useState('')\n\n\nasync function searchTweets() {  \n    try {\n        var search = await axios.get(`/api/searchdata?search=${inputValue}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }\n}\n\nasync function searchByUsername() {\n    try {\n        var search = await axios.get(`/api/searchByUsername?search=${inputValue}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }    \n}\n\nasync function searchUser(id) {  \n    try {\n        var search = await axios.get(`/api/searchByUser?search=${id}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }\n}\n\nfunction handleClickUser() {\n    setErrorValueCharacters('')\n    setSearchresult([])\n    setGetByContentButton(false)\n    setGetByUserButton(true)\n    setErrorValueContent(false)\n    }\n\nfunction handleClickContent() { \n\n    if(! /^[a-zA-Z0-9]+$/.test(inputValue)) {\n        setErrorValueCharacters('Please enter only text - no special characters!')\n    } else {\n        setErrorValueCharacters('')\n        setSearchresult([])\n        setGetByUserButton(false)\n        setGetByContentButton(true)\n        setErrorValueUser(false)\n    }\n}\n\n\nuseEffect(()=>{\n    if(getByUserButton) {\n        searchByUsername()\n        .then(res=>{ \n         if (Object.keys(res.data).length === 0 || Object.keys(res.data).includes('stack')) {   \n            setErrorValueUser(true)\n            setGetByUserButton(false)\n        } else {\n                setErrorValueUser(false)\n                let usernameArray = res.data.data;\n                    usernameArray.forEach(element=> {\n                        searchUser(element.id)                  \n                            .then(res=>{\n                                if(Object.keys(res.data).includes('errors')) {\n                                    setErrorValueAuthorized(\"I'm sorry, that user has hidden their tweets from view.  Please try again.\")\n                                } else {\n                                    setErrorValueAuthorized('')\n                                    setSearchresult([{\n                                        id: res.data[0].id,\n                                        dateString: res.data[0].dateString,\n                                        name: res.data[0].name,\n                                        username: res.data[0].username,\n                                        verified: res.data[0].verified,\n                                        profile_image_url: res.data[0].profile_image_url,\n                                        tweetString: res.data[0].tweetString,\n                                        url: res.data[0].url,\n                                        type: res.data[0].type,\n                                        like_count: res.data[0].like_count,\n                                        retweet_count: res.data[0].retweet_count,\n                                        url_string: res.data[0].url_string\n                                    },\n                                    {\n                                        id: res.data[1].id,\n                                        dateString: res.data[1].dateString,\n                                        name: res.data[1].name,\n                                        username: res.data[1].username,\n                                        verified: res.data[1].verified,\n                                        profile_image_url: res.data[1].profile_image_url,\n                                        tweetString: res.data[1].tweetString,\n                                        url: res.data[1].url,\n                                        type: res.data[1].type,\n                                        like_count: res.data[1].like_count,\n                                        retweet_count: res.data[1].retweet_count,\n                                        url_string: res.data[1].url_string\n                                    },\n                                    {\n                                        id: res.data[2].id,\n                                        dateString: res.data[2].dateString,\n                                        name: res.data[2].name,\n                                        username: res.data[2].username,\n                                        verified: res.data[2].verified,\n                                        profile_image_url: res.data[2].profile_image_url,\n                                        tweetString: res.data[2].tweetString,\n                                        url: res.data[2].url,\n                                        type: res.data[2].type,\n                                        like_count: res.data[2].like_count,\n                                        retweet_count: res.data[2].retweet_count,\n                                        url_string: res.data[2].url_string\n                                    },\n                                    {\n                                        id: res.data[3].id,\n                                        dateString: res.data[3].dateString,\n                                        name: res.data[3].name,\n                                        username: res.data[3].username,\n                                        verified: res.data[3].verified,\n                                        profile_image_url: res.data[3].profile_image_url,\n                                        tweetString: res.data[3].tweetString,\n                                        url: res.data[3].url,\n                                        type: res.data[3].type,\n                                        like_count: res.data[3].like_count,\n                                        retweet_count: res.data[3].retweet_count,\n                                        url_string: res.data[3].url_string\n                                    },\n                                    {\n                                        id: res.data[4].id,\n                                        dateString: res.data[4].dateString,\n                                        name: res.data[4].name,\n                                        username: res.data[4].username,\n                                        verified: res.data[4].verified,\n                                        profile_image_url: res.data[4].profile_image_url,\n                                        tweetString: res.data[4].tweetString,\n                                        url: res.data[4].url,\n                                        type: res.data[4].type,\n                                        like_count: res.data[4].like_count,\n                                        retweet_count: res.data[4].retweet_count,\n                                        url_string: res.data[4].url_string\n                                    },\n                                    {\n                                        id: res.data[5].id,\n                                        dateString: res.data[5].dateString,\n                                        name: res.data[5].name,\n                                        username: res.data[5].username,\n                                        verified: res.data[5].verified,\n                                        profile_image_url: res.data[5].profile_image_url,\n                                        tweetString: res.data[5].tweetString,\n                                        url: res.data[5].url,\n                                        type: res.data[5].type,\n                                        like_count: res.data[5].like_count,\n                                        retweet_count: res.data[5].retweet_count,\n                                        url_string: res.data[5].url_string\n                                    },\n                                    {\n                                        id: res.data[6].id,\n                                        dateString: res.data[6].dateString,\n                                        name: res.data[6].name,\n                                        username: res.data[6].username,\n                                        verified: res.data[6].verified,\n                                        profile_image_url: res.data[6].profile_image_url,\n                                        tweetString: res.data[6].tweetString,\n                                        url: res.data[6].url,\n                                        type: res.data[6].type,\n                                        like_count: res.data[6].like_count,\n                                        retweet_count: res.data[6].retweet_count,\n                                        url_string: res.data[6].url_string\n                                    },\n                                    {\n                                        id: res.data[7].id,\n                                        dateString: res.data[7].dateString,\n                                        name: res.data[7].name,\n                                        username: res.data[7].username,\n                                        verified: res.data[7].verified,\n                                        profile_image_url: res.data[7].profile_image_url,\n                                        tweetString: res.data[7].tweetString,\n                                        url: res.data[7].url,\n                                        type: res.data[7].type,\n                                        like_count: res.data[7].like_count,\n                                        retweet_count: res.data[7].retweet_count,\n                                        url_string: res.data[7].url_string\n                                    },\n                                    {\n                                        id: res.data[8].id,\n                                        dateString: res.data[8].dateString,\n                                        name: res.data[8].name,\n                                        username: res.data[8].username,\n                                        verified: res.data[8].verified,\n                                        profile_image_url: res.data[8].profile_image_url,\n                                        tweetString: res.data[8].tweetString,\n                                        url: res.data[8].url,\n                                        type: res.data[8].type,\n                                        like_count: res.data[8].like_count,\n                                        retweet_count: res.data[8].retweet_count,\n                                        url_string: res.data[8].url_string\n                                    },\n                                    {\n                                        id: res.data[9].id,\n                                        dateString: res.data[9].dateString,\n                                        name: res.data[9].name,\n                                        username: res.data[9].username,\n                                        verified: res.data[9].verified,\n                                        profile_image_url: res.data[9].profile_image_url,\n                                        tweetString: res.data[9].tweetString,\n                                        url: res.data[9].url,\n                                        type: res.data[9].type,\n                                        like_count: res.data[9].like_count,\n                                        retweet_count: res.data[9].retweet_count,\n                                        url_string: res.data[9].url_string\n                                    }\n                                ])\n                            }\n                            setGetByUserButton(false)\n                            \n                            })\n                            \n                        })\n                    \n                    } \n            })      \n    } else if (getByContentButton) {\n        searchTweets() \n                .then(res=>{\n                    if (Object.keys(res.data).length === 0 || Object.keys(res.data).includes('stack')) {\n                        setErrorValueContent(true)\n                        setGetByContentButton(false)\n                    } else {\n                        setErrorValueAuthorized('')\n                        setSearchresult(\n                            [{\n                                id: res.data[0].id,\n                                dateString: res.data[0].dateString,\n                                name: res.data[0].name,\n                                username: res.data[0].username,\n                                verified: res.data[0].verified,\n                                profile_image_url: res.data[0].profile_image_url,\n                                tweetString: res.data[0].tweetString,\n                                url: res.data[0].url,\n                                type: res.data[0].type,\n                                like_count: res.data[0].like_count,\n                                retweet_count: res.data[0].retweet_count,\n                                url_string: res.data[0].url_string\n                            },\n                            {\n                                id: res.data[1].id,\n                                dateString: res.data[1].dateString,\n                                name: res.data[1].name,\n                                username: res.data[1].username,\n                                verified: res.data[1].verified,\n                                profile_image_url: res.data[1].profile_image_url,\n                                tweetString: res.data[1].tweetString,\n                                url: res.data[1].url,\n                                type: res.data[1].type,\n                                like_count: res.data[1].like_count,\n                                retweet_count: res.data[1].retweet_count,\n                                url_string: res.data[1].url_string\n                            },\n                            {\n                                id: res.data[2].id,\n                                dateString: res.data[2].dateString,\n                                name: res.data[2].name,\n                                username: res.data[2].username,\n                                verified: res.data[2].verified,\n                                profile_image_url: res.data[2].profile_image_url,\n                                tweetString: res.data[2].tweetString,\n                                url: res.data[2].url,\n                                type: res.data[2].type,\n                                like_count: res.data[2].like_count,\n                                retweet_count: res.data[2].retweet_count,\n                                url_string: res.data[2].url_string\n                            },\n                            {\n                                id: res.data[3].id,\n                                dateString: res.data[3].dateString,\n                                name: res.data[3].name,\n                                username: res.data[3].username,\n                                verified: res.data[3].verified,\n                                profile_image_url: res.data[3].profile_image_url,\n                                tweetString: res.data[3].tweetString,\n                                url: res.data[3].url,\n                                type: res.data[3].type,\n                                like_count: res.data[3].like_count,\n                                retweet_count: res.data[3].retweet_count,\n                                url_string: res.data[3].url_string\n                            },\n                            {\n                                id: res.data[4].id,\n                                dateString: res.data[4].dateString,\n                                name: res.data[4].name,\n                                username: res.data[4].username,\n                                verified: res.data[4].verified,\n                                profile_image_url: res.data[4].profile_image_url,\n                                tweetString: res.data[4].tweetString,\n                                url: res.data[4].url,\n                                type: res.data[4].type,\n                                like_count: res.data[4].like_count,\n                                retweet_count: res.data[4].retweet_count,\n                                url_string: res.data[4].url_string\n                            },\n                            {\n                                id: res.data[5].id,\n                                dateString: res.data[5].dateString,\n                                name: res.data[5].name,\n                                username: res.data[5].username,\n                                verified: res.data[5].verified,\n                                profile_image_url: res.data[5].profile_image_url,\n                                tweetString: res.data[5].tweetString,\n                                url: res.data[5].url,\n                                type: res.data[5].type,\n                                like_count: res.data[5].like_count,\n                                retweet_count: res.data[5].retweet_count,\n                                url_string: res.data[5].url_string\n                            },\n                            {\n                                id: res.data[6].id,\n                                dateString: res.data[6].dateString,\n                                name: res.data[6].name,\n                                username: res.data[6].username,\n                                verified: res.data[6].verified,\n                                profile_image_url: res.data[6].profile_image_url,\n                                tweetString: res.data[6].tweetString,\n                                url: res.data[6].url,\n                                type: res.data[6].type,\n                                like_count: res.data[6].like_count,\n                                retweet_count: res.data[6].retweet_count,\n                                url_string: res.data[6].url_string\n                            },\n                            {\n                                id: res.data[7].id,\n                                dateString: res.data[7].dateString,\n                                name: res.data[7].name,\n                                username: res.data[7].username,\n                                verified: res.data[7].verified,\n                                profile_image_url: res.data[7].profile_image_url,\n                                tweetString: res.data[7].tweetString,\n                                url: res.data[7].url,\n                                type: res.data[7].type,\n                                like_count: res.data[7].like_count,\n                                retweet_count: res.data[7].retweet_count,\n                                url_string: res.data[7].url_string\n                            },\n                            {\n                                id: res.data[8].id,\n                                dateString: res.data[8].dateString,\n                                name: res.data[8].name,\n                                username: res.data[8].username,\n                                verified: res.data[8].verified,\n                                profile_image_url: res.data[8].profile_image_url,\n                                tweetString: res.data[8].tweetString,\n                                url: res.data[8].url,\n                                type: res.data[8].type,\n                                like_count: res.data[8].like_count,\n                                retweet_count: res.data[8].retweet_count,\n                                url_string: res.data[8].url_string\n                            },\n                            {\n                                id: res.data[9].id,\n                                dateString: res.data[9].dateString,\n                                name: res.data[9].name,\n                                username: res.data[9].username,\n                                verified: res.data[9].verified,\n                                profile_image_url: res.data[9].profile_image_url,\n                                tweetString: res.data[9].tweetString,\n                                url: res.data[9].url,\n                                type: res.data[9].type,\n                                like_count: res.data[9].like_count,\n                                retweet_count: res.data[9].retweet_count,\n                                url_string: res.data[9].url_string\n                            }\n                        ])\n                        setGetByContentButton(false)\n                    } \n                })  \n    } \n}, [getByUserButton, getByContentButton])\n\nconst tweetCards = searchresult.map((tweet) => { \n    return <TweetCard key={tweet.id} dateString={tweet.dateString} created_at={tweet.created_at} name={tweet.name} username={tweet.username} \n    verified={tweet.verified} profile_image_url={tweet.profile_image_url} tweetString={tweet.tweetString} type={tweet.type} url={tweet.url}\n     like_count={tweet.like_count} retweet_count={tweet.retweet_count} url_string={tweet.url_string}\n    />})\n   \n    return (\n        <div className=\"searchContainer\"\n            style={{\n                position: 'absolute',\n                top: '50px',\n                left: '0px',\n                width: '100vw',\n                height: '100%',\n                backgroundColor: 'rgba(255, 251, 251, 0.3)',\n                backgroundImage: `url(${TV})`,\n                backgroundBlendMode: 'lighten',\n                zIndex: '1'\n            }}\n        >\n            <div className=\"searchBtnsContainer\">\n                <button \n                    className=\"searchBtnUser\"\n                    onClick={handleClickUser}\n                >Search by User</button>\n                <button \n                    className=\"searchBtnContent\"\n                    onClick={handleClickContent}\n                >Search by Content</button>\n                <input \n                    type=\"text\"     \n                    placeholder=\"Type search item here...\"\n                    value={inputValue}\n                    onChange={event=>setInputValue(event.target.value)}> \n                </input>\n            </div>\n            <div className=\"searchResultContainer\">\n                <div className=\"searchResult\">  \n\n                <p>{errorValueUser ? `I couldn't find anyone Twitter by the username ${inputValue}.  May I recommend searching for Marilyn Monroe?` : ``}</p>\n                    <p>{errorValueContent ? `We couldn't find anything under ${inputValue}, but you can shop for tomato soup here.` : ``}</p>\n                    <p>{errorValueCharacters}</p>\n                    <p>{errorValueAuthorized}</p>\n\n                {tweetCards}\n \n                </div> \n                    <p\n                        style={{\n                            fontWeight: `600`,\n                            paddingBottom: `1em`\n                        }}\n                    >Why did I build this?  Read the blog post <a href=\"#\">here.</a></p> \n            </div>\n        </div>\n    )\n}\n//encodeURIComponent","import React, {useState, useEffect} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\nimport ShowcaseResult from './ShowcaseResult'\nimport axios from 'axios'\n\nexport default function Showcase() {\n\nconst [show, setShow] = useState({})\nconst [buttonpushed, setButtonpushed] = useState('')\nconst [id, setId] = useState('')\n\nfunction handleClickGaga(event) {\n    event.preventDefault(); \n    setButtonpushed('Lady Gaga') \n    setId(14230524)\n}\n\nfunction handleClickOprah(event) {\n    event.preventDefault();\n    setButtonpushed('Oprah Winfrey')\n    setId(19397785) \n}\n\nfunction handleClickReese(event) {\n    event.preventDefault();\n    setButtonpushed('Reese Witherspoon') \n    setId(1198406491)\n}\n\nfunction handleClickAshton(event) {\n    event.preventDefault();\n    setButtonpushed('Ashton Kutcher') \n    setId(19058681)\n}\n\nfunction handleClickBeyonce(event) {\n    event.preventDefault();\n    setButtonpushed('Beyonce Knowles') \n    setId(31239408)\n}\n\nasync function searchUser() {  \n    try {\n        var search = await axios.get(`/api/searchByUser?search=${id}`)\n        return search\n    }\n    catch(err){\n        console.log(err)\n    }\n}\n  \n\nfunction getRandomNum() {\n    let num = Math.round(Math.random() *10)\n    return num;\n}    \n\n    useEffect(()=> {\n        if (buttonpushed) {\n            setShow('')\n            searchUser()\n                .then(res=> {\n                    \n                    const randomTweet = res.data[getRandomNum()]\n                    \n                    setShow({\n                        type: randomTweet.type,\n                        url: randomTweet.url,\n                        retweet_count: randomTweet.retweet_count,\n                        like_count: randomTweet.like_count,\n                        dateString: randomTweet.dateString,\n                        id: randomTweet.id,\n                        name: randomTweet.name,\n                        username: randomTweet.username,\n                        verified: randomTweet.verified,\n                        profile_image_url: randomTweet.profile_image_url,\n                        tweetString: randomTweet.tweetString,\n                        url_string: randomTweet.url_string\n                    })\n                })\n            } else {                \n            setButtonpushed('')\n            } \n        }, [buttonpushed])  \n        \n    return (\n        <div \n        className=\"showcaseContainer\"\n        style={{\n            position: 'absolute',\n            top: '50px',\n            left: '0px',\n            width: '100vw',\n            height: '100%',\n            backgroundColor: 'rgba(255, 251, 251, 0.3)',\n            backgroundImage: `url(${TV})`,\n            backgroundBlendMode: 'lighten',\n            zIndex: '1'\n        }}\n        >\n        <div\n            className=\"showcaseBtnsContainer\"\n        >\n        </div>\n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickGaga}\n  \n            >Gaga</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickOprah}    \n            >Oprah</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickReese}     \n            >Reese</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickAshton}    \n            >Ashton</button> \n\n            <button\n                className=\"selectBtn\"\n                onClick={handleClickBeyonce}\n            >Beyonce</button> \n            \n            \n            <div>\n                <div className=\"showcaseResultContainer\">\n                <div className=\"showcaseResult\">\n                    {buttonpushed}\n                    <ShowcaseResult\n                        result={{tweet: show, celebrity: buttonpushed, toggleDisplay: 'true'}}\n                    />  \n                </div>\n                </div>\n            </div>\n                <p\n                style={{\n                    fontWeight: `600`,\n                    paddingBottom: `1em`\n                }}\n                >Why did I build this?  Read the blog post <a href=\"#\">here.</a></p>\n        </div>\n    )\n}\n","import React from 'react'\nimport Image from './Image.js'\nimport ProfileImage from './ProfileImage.js'\n\nexport default function ShowcaseResult(props) { \nconsole.log(props.result)\n    \n    return (\n        <div\n        style={{border: `1px solid black`,\n                borderRadius: `13px`,\n                fontWeight: `400`,\n                fontStyle: `normal`,\n                padding: `.5em`,\n                margin: `.4em auto .4em auto`\n                }}\n        >\n\n            <p>{props.result.tweet.dateString ? props.result.tweet.dateString  : ''}</p> \n            \n            {props.result.tweet.profile_image_url ? <ProfileImage url={props.result.tweet.profile_image_url} /> : ''}\n\n            <p>{props.result.tweet.name ? props.result.tweet.name : ''} {props.result.tweet.verified ? `☑️` : ''}</p> \n            <p>{props.result.tweet.username ? `@${props.result.tweet.username}` : ''}</p>\n    \n            <p>{props.result.tweet.tweetString ? props.result.tweet.tweetString : 'Select a celebrity above to view one of their recent tweets.'}</p>  \n            <p><a href={props.result.tweet.url_string ? props.result.tweet.url_string : ''}>{props.result.tweet.url_string ? props.result.tweet.url_string : ''}</a></p>\n\n            {props.result.tweet.type === 'photo' ? <Image result={props.result.tweet}/> : '' }\n                                \n            <p> {props.result.tweet.like_count ? `💚: ${props.result.tweet.like_count}` : ''}</p>\n            <p> {props.result.tweet.retweet_count ? `🔁: ${props.result.tweet.retweet_count}` : ''}</p> \n\n        </div>\n    )\n}\n","import React from 'react'\nimport Image from './Image.js'\nimport ProfileImage from './ProfileImage.js'\n\nexport default function TweetCard(props) {\n    console.log(props)\n    return (\n    <div\n        className='tweet_card'\n       style={{\n            border: `1px solid black`,\n            borderRadius: `13px`,\n            fontWeight: `400`,\n            fontStyle: `normal`,\n            padding: `.5em`,\n            margin: `.4em auto .4em auto`\n            }}\n        >\n        <div\n        style={{\n            //width:`30em`,\n            display: 'flex',\n            }}\n        >\n            {/* <img\n                src={props.profile_image_url ? props.profile_image_url : ''}\n                alt='image' \n                width='100%' \n                style={{\n                    borderRadius: `50%`,\n                    height: `3em`,\n                    width:`3em`,\n                    margin: `.4em`\n                    }}\n            ></img> */}\n            {props.profile_image_url ? <ProfileImage url={props.profile_image_url} /> : ''}\n            <div\n            style={{\n                display: 'flex'\n            }}\n            >\n                <div\n                style={{\n                    padding: `.4em`,\n                    marginRight: `3em`\n                }}\n                >\n                    <p>{props.name ? props.name : ''} {props.verified ? `☑️` : ''} {props.dateString ? props.dateString  : ''}</p> \n                    <p>{props.username ? `@${props.username}` : ''}</p> \n                    <p>{props.tweetString ? props.tweetString : ''}</p>   \n                    <p><a href={props.url_string ? props.url_string : ''}>{props.url_string ? props.url_string : ''}</a></p>\n\n                    {props.type === 'photo' ? <Image result={props}/> : '' }\n                                    \n                    <p> {props.like_count ? `💚: ${props.like_count}` : ''}</p>\n                    <p> {props.retweet_count ? `🔁: ${props.retweet_count}` : ''}</p>  \n                </div>\n            </div>\n        </div> \n\n              \n        </div>\n    )\n}\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n\n        <App />\n \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export default __webpack_public_path__ + \"media/TV.28380c92.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AACA;AACA;AADA;AAIA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAAA;AAAA;AAAA;AAAA;AA6BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAyCA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;;;;;;;;;;;;;;;;ACxBA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;;;;;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAJA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AADA;AAaA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AA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","sourceRoot":""}