{"ast":null,"code":"var _jsxFileName = \"/Users/casvalkyriespicer/Documents/GitHub/15-minutes/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './index.css';\nimport TV from './pics/TV.png';\nimport test from './test';\nimport DOMpurify from 'dompurify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction cleanData(userInput) {\n  return DOMpurify.sanitize(userInput);\n} //need to add something to the html file as well to make this work!\n\n\nlet searchByContentArray = []; //let iterator = (Object.values(object));\n\nlet objectArray = [];\ntest.forEach(object => {\n  console.log(Object.values(object).filter(value => value === \"Oprah\"));\n});\nexport default function Search() {\n  _s();\n\n  const [searchresult, setSearchresult] = useState('');\n  const [inputValue, setInputValue] = useState('');\n\n  function handleClickUser() {\n    setSearchresult('');\n    console.log(test.find(element => element == {\n      username: inputValue\n    }));\n    setSearchresult('Hi');\n  }\n\n  function handleClickContent() {\n    setSearchresult('');\n    setSearchresult('Yo');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchContainer\",\n    style: {\n      position: 'absolute',\n      top: '50px',\n      left: '0px',\n      width: '100vw',\n      height: '100%',\n      backgroundColor: 'rgba(255, 251, 251, 0.3)',\n      backgroundImage: `url(${TV})`,\n      backgroundBlendMode: 'lighten',\n      zIndex: '1'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchBtnsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnUser\",\n        onClick: handleClickUser,\n        children: \"Search by User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"searchBtnContent\",\n        onClick: handleClickContent,\n        children: \"Search by Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type search item here...\",\n        value: inputValue,\n        onChange: event => setInputValue(cleanData(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchResultContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchResult\",\n        children: searchresult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"7HyYxLdojEY3nWzxWkeZ4GA4iwA=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/casvalkyriespicer/Documents/GitHub/15-minutes/src/Search.js"],"names":["React","useState","TV","test","DOMpurify","cleanData","userInput","sanitize","searchByContentArray","objectArray","forEach","object","console","log","Object","values","filter","value","Search","searchresult","setSearchresult","inputValue","setInputValue","handleClickUser","find","element","username","handleClickContent","position","top","left","width","height","backgroundColor","backgroundImage","backgroundBlendMode","zIndex","event","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,aAAP;AACA,OAAOC,EAAP,MAAe,eAAf;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,SAASC,SAAT,CAAmBC,SAAnB,EAA8B;AAC1B,SAAOF,SAAS,CAACG,QAAV,CAAmBD,SAAnB,CAAP;AACH,C,CAAG;;;AAEJ,IAAIE,oBAAoB,GAAG,EAA3B,C,CACA;;AACA,IAAIC,WAAW,GAAG,EAAlB;AAEAN,IAAI,CAACO,OAAL,CAAcC,MAAD,IAAY;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAaC,MAAM,CAACC,MAAP,CAAcJ,MAAd,CAAD,CAAwBK,MAAxB,CAA+BC,KAAK,IAAIA,KAAK,KAAK,OAAlD,CAAZ;AAGH,CAJD;AAOA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAE7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASsB,eAAT,GAA2B;AACvBH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAACqB,IAAL,CAAUC,OAAO,IAAIA,OAAO,IAAI;AAACC,MAAAA,QAAQ,EAAEL;AAAX,KAAhC,CAAZ;AACAD,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH;;AAED,WAASO,kBAAT,GAA8B;AAC1BP,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAA,IAAAA,eAAe,CAAC,IAAD,CAAf;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AACI,IAAA,KAAK,EAAE;AACHQ,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,GAAG,EAAE,MAFF;AAGHC,MAAAA,IAAI,EAAE,KAHH;AAIHC,MAAAA,KAAK,EAAE,OAJJ;AAKHC,MAAAA,MAAM,EAAE,MALL;AAMHC,MAAAA,eAAe,EAAE,0BANd;AAOHC,MAAAA,eAAe,EAAG,OAAMhC,EAAG,GAPxB;AAQHiC,MAAAA,mBAAmB,EAAE,SARlB;AASHC,MAAAA,MAAM,EAAE;AATL,KADX;AAAA,4BAaI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,eADd;AAEI,QAAA,OAAO,EAAEb,eAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AACI,QAAA,SAAS,EAAC,kBADd;AAEI,QAAA,OAAO,EAAEI,kBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,0BAFhB;AAGI,QAAA,KAAK,EAAEN,UAHX;AAII,QAAA,QAAQ,EAAEgB,KAAK,IAAEf,aAAa,CAACjB,SAAS,CAACgC,KAAK,CAACC,MAAN,CAAarB,KAAd,CAAV;AAJlC;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eA6BI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBAA+BE;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH;;GAnDuBD,M;;KAAAA,M","sourcesContent":["import React, {useState} from 'react'\nimport './index.css'\nimport TV from './pics/TV.png'\nimport test from './test'\nimport DOMpurify from 'dompurify'\n\nfunction cleanData(userInput) {\n    return DOMpurify.sanitize(userInput)\n}   //need to add something to the html file as well to make this work!\n\nlet searchByContentArray = [];\n//let iterator = (Object.values(object));\nlet objectArray = [];\n\ntest.forEach((object) => {\n    console.log((Object.values(object)).filter(value => value === \"Oprah\"))\n    \n\n})\n\n\nexport default function Search() {\n\n    const [searchresult, setSearchresult] = useState('')\n    const [inputValue, setInputValue] = useState('')\n\n    function handleClickUser() {\n        setSearchresult('')\n        console.log(test.find(element => element == {username: inputValue}))\n        setSearchresult('Hi')\n    }\n\n    function handleClickContent() {\n        setSearchresult('')\n        setSearchresult('Yo')\n    }\n\n    return (\n        <div className=\"searchContainer\"\n            style={{\n                position: 'absolute',\n                top: '50px',\n                left: '0px',\n                width: '100vw',\n                height: '100%',\n                backgroundColor: 'rgba(255, 251, 251, 0.3)',\n                backgroundImage: `url(${TV})`,\n                backgroundBlendMode: 'lighten',\n                zIndex: '1'\n            }}\n        >\n            <div className=\"searchBtnsContainer\">\n                <button \n                    className=\"searchBtnUser\"\n                    onClick={handleClickUser}\n                >Search by User</button>\n                <button \n                    className=\"searchBtnContent\"\n                    onClick={handleClickContent}\n                >Search by Content</button>\n                <input \n                    type=\"text\"     \n                    placeholder=\"Type search item here...\"\n                    value={inputValue}\n                    onChange={event=>setInputValue(cleanData(event.target.value))}>\n                </input>\n            </div>\n            <div className=\"searchResultContainer\">\n                <div className=\"searchResult\">{searchresult}</div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}